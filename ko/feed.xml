<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://blog.pocu.academy/ko/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.pocu.academy/ko/" rel="alternate" type="text/html" /><updated>2024-04-11T18:29:41+00:00</updated><id>https://blog.pocu.academy/ko/feed.xml</id><title type="html">POCU 블로그</title><subtitle>진정한 프로그래머의 기본기</subtitle><entry><title type="html">2024년 5월 학기 수강 안내</title><link href="https://blog.pocu.academy/ko/2024/04/11/about-may-2024-term.html" rel="alternate" type="text/html" title="2024년 5월 학기 수강 안내" /><published>2024-04-11T00:00:00+00:00</published><updated>2024-04-11T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2024/04/11/about-may-2024-term</id><content type="html" xml:base="https://blog.pocu.academy/ko/2024/04/11/about-may-2024-term.html"><![CDATA[<p>안녕하세요, POCU 아카데미 대표 강사 김포프입니다.</p>
<p>POCU 아카데미가 <strong>2023년 5월 정규 학기</strong> 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 5개 과목으로, <a href="https://pocu.academy/ko/Courses/COMP2300">COMP2300: 어셈블리 프로그래밍</a>과 <a href="https://pocu.academy/ko/Courses/COMP3500">COMP3500: 알고리듬 및 자료구조 (Java)</a>를 제외한 모든 과목을 수강하실 수 있습니다.</p>
<!--more-->
<h2>A. 과목 소개</h2>
<p>그러면 각 과목에 대해 간단히 설명부터 드리겠습니다. 아래의 순서는 <a href="https://trello.com/c/7TlAQwWQ">저희가 추천하는 수강 순서</a>를 따릅니다.</p>
<h3>1. <a href="https://pocu.academy/ko/Courses/COMP1500">COMP1500: 실무 프로그래밍 입문 (C#)</a> (평점 4.9/5.0)</h3>
<p>POCU 아카데미를 처음 시작하시는 분들이 제일 먼저 들으시는 과목입니다. 타 기관의 입문 강좌와는 달리 한 가지 프로그래밍 언어를 사용하는 법이 아니라 프로그래밍 언어에 상관없이 일류 프로그래머가 되려면 배워야 하는 프로그래밍의 기본을 가르칩니다.</p>
<p>단, 이 과목은 <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B6832340619">‘Hello Coding 프로그래밍’</a> 책을 정독하신 분들을 대상으로 합니다. 프로그래밍 입문(첫걸음) 과목과 대학교 수준의 기초 프로그래밍 과목은 배우는 방법이 완벽히 다릅니다. 전자는 프로그래밍을 전혀 모르는 상황에서 대충 맛만 보려는 분들도 들을 수 있는 과목입니다. 따라서 누군가의 코드를 따라 치면서 스트레스 없이 즐겁게 배울 수 있는 과목입니다. 하지만 후자는 이미 프로그래밍을 업으로 삼겠다고 마음먹으신 분들을 대상으로 하는지라 컴퓨터가 작동하는 원리부터 프로로 살아남기 위해 가져야 하는 자세와 습관 등을 기초부터 매우 찬찬히(그리고 지루하게) 배워나갈 수밖에 없습니다.</p>
<p>취미로 운동을 하시는 분들은 원할 때 아무 때나 나가서 운동을 즐긴다면 프로로 운동을 하시는 분들은 시즌이 열리기 한참 전부터 스프링 캠프에서 지루한 기초체력훈련을 차근차근하는 것과 마찬가지지요. 그것도 수십 년에 걸쳐서요. POCU 아카데미에서 제공하는 COMP1500 과목이 바로 그런 프로를 위한 기초체력 훈련 과정입니다. ‘Hello Coding’ 책을 통해 프로그래머를 업으로 삼겠다고 마음먹으신 분들에게 제대로 된 기본기를 가지게 해 드리겠습니다.</p>
<h3>2. <a href="https://pocu.academy/ko/Courses/COMP1000">COMP1000: 소프트웨어 공학용 수학</a> (평점 4.8/5.0)</h3>
<p>순수 수학에서 흔히 볼 수 있는 이론과 증명은 현실 세계를 이해하려는 지난 수백 년 동안의 노력의 결과물입니다. 하지만 컴퓨터의 발전과 함께 이제는 디지털 세계가 현실 세계의 일부가 되었습니다. 이런 디지털 세계를 구축하고 그 속의 문제들을 해결하는 소프트웨어 공학자에게 이론 중심의 전통적인 수학은 다소 모자란 부분이 있습니다. 고로, 본 강좌는 이론/증명 위주가 아닌 실용성 위주의 수학 및 컴퓨터를 이해하는데 중요한 수학에 중점을 두어 진행합니다.</p>
<p>이 과목은 학생분들의 만족도가 매우 높은 과목입니다. 내용의 구성이나 평가 방법 등이 정말 프로그래머를 위한 제대로 된 첫 수학 과목이라는 평을 받기에 충분하다고 말씀들 하십니다.</p>
<p>이 수업을 성공적으로 마치시면 머리로만 어렴풋이 이해하고 있던 수학의 내용들을 프로그래밍으로 확실히 옮기실 수 있을 것이라고 보장합니다.</p>
<h3>3. <a href="https://pocu.academy/ko/Courses/COMP2200">COMP2200: C 언매니지드 프로그래밍</a> (평점 4.8/5.0)</h3>
<p>프로그래머의 지속적인 성장에 반드시 필요한 지식 중 하나가 바로 컴퓨터 하드웨어에 대한 이해입니다. 속된 말로 ‘컴퓨터와 결혼한다’라고까지 합니다. 자신이 모는 자동차를 잘 이해하지 못하면 뛰어난 레이서가 될 수 없듯이 자신이 만든 프로그램이 실행될 하드웨어를 이해하지 못하는 프로그래머 역시 한계가 있을 수밖에 없습니다.</p>
<p>C는 하드웨어와 매우 가까운 언어이면서도 대부분의 매니지드 언어와 달리 언매니지드 언어 특유의 기능(예: 메모리 관리)들을 프로그래머가 사용하도록 강제하기 때문에, 하드웨어의 동작 원리를 공부하고 싶은 분들, 혹은 컴퓨터를 더 잘 이해하고 싶은 분들에게 매우 훌륭한 입문용 언매니지드 언어라고 할 수 있겠습니다.</p>
<p>C를 배우셨는데 내가 작성한 코드가 어떻게 어셈블리어로 바뀌는지 혹은 어느 메모리에서 어떻게 실행되는지 모르신다면 그건 그냥 사용 가능한 프로그래밍 언어 중 하나로 C를 배우신 것입니다. POCU 아카데미에서는 C를 통해 하드웨어를 이해할 수 있는 눈을 뜨게 해 드립니다.</p>
<h3>4. <a href="https://pocu.academy/ko/Courses/COMP2500">COMP2500: 개체지향 프로그래밍 및 설계 (Java)</a> (평점 4.9/5.0)</h3>
<p>’인간이 생각하는 방식으로 프로그래밍 하자!’라는 야심찬 목표를 가지고 시작한 개체지향 프로그래밍(OOP, Object-Oriented Programming)은 이제 주류 프로그래밍 패러다임이 되었습니다. 허나 기존의 프로그래밍 패러다임(예: 절차적 프로그래밍)에 비해 ‘인간이 생각하는 방식’, 다른 말로 하면 ‘인간다움’이란 정의는 매우 주관적일 수밖에 없습니다. 각 개인이 속한 환경과 시대에 따라 세상을 보는 눈이 달라지니까요.</p>
<p>이 때문에 특정 OO 언어의 사용법만 익히는 것은 반쪽짜리 OOP 공부입니다. 특정 언어의 사용법은 객관적인 측면일 뿐이니까요. 이 외에 사람의 관점에서 바라본 실세계를 컴퓨터 프로그램의 개체로 모델링할 수 있는 능력(주관적인 측면)을 같이 키워나가야만 제대로 OOP를 배우는 겁니다. 후자는 개체지향 분석 및 설계(OOAD, Object-Oriented Analysis and Design)의 영역으로 본 과목은 OOP와 OOAD(이후 합쳐서 OO라고 표현)를 동시에 가르칩니다.</p>
<p>상술한 주관성 때문에 OO 분야에는 다양한 의견과 주장이 존재해왔습니다. 그리고 어느 시대와 진영의 자료로 공부했느냐에 따라 각 프로그래머가 OO(OOP와 OOAD를 모두 포함)를 이해하는 방식이 많이 다릅니다. 객관성을 추구하는 컴퓨터 과학/공학이라는 학문에 이런 광범위한 주관성은 많은 혼란을 야기합니다. 더 나아가 다른 주장이 나온 이유를 이해하려는 노력 없이 자신이 무비판적으로 수용하며 배운 내용에 기초하여 다른 진영이 무조건 틀렸다고 공격하는 모습들도 OO 분야에서는 종종 발견되는 건설적이지 못한 모습입니다.</p>
<p>이런 문제들을 해결하기 위해 본 과목은 현재 실무에서 다수설로 받아들이는 OO의 정의와 모델링/프로그래밍 기법을 배우는 외에도 이런 다양한 주장들이 나오게 된 배경과 각 주장의 장단점, 그리고 그들 사이에서 어떻게 밸런스를 잡아야 훌륭한 프로그래머가 될 수 있는지에 대한 가이드도 제공합니다.</p>
<h3>5. <a href="https://pocu.academy/ko/Courses/COMP3200">COMP3200: C++ 언매니지드 프로그래밍</a> (평점 4.7/5.0)</h3>
<p>학생분들부터 현업에 계신 분들에 이르기까지 많은 분들에게 사랑받고 있는 스테디 + 베스트셀러 과목입니다. 모 회사에서 단체로 수강을 하기도 하셨습니다.</p>
<p>C++을 제대로 마스터하려면 ‘무엇을 사용해야 하는지’ 보다는 ‘무엇을 사용하면 안 되는지’를 알아야 합니다. 매우 방대하고 통일적이지 못한 표준과 긴 역사를 가진 언어이기 때문입니다. 프로그래밍 언어 설계 측면에서는 여러 문제가 있는 언어이지만 C가 가지는 언매니지드 언어의 장점과 개체 지향 프로그래밍(OOP)의 장점을 모두 갖춘 언어 중 널리 쓰이는 거의 유일한 언어입니다.</p>
<p>POCU 아카데미에서는 업계에서 쓰이는 C++을 엄선해서 가르칩니다. 그리고 자칫 책으로만 배울 경우 실수하기 쉬운 부분, 그리고 언매니지드 언어의 특성상 실수를 하면 매우 큰 문제가 생길 수 있는 부분들을 확실히 알려드려 성능이 너무 좋아 위험하기까지 한(2 Fast 2 Furious ^^) C++이란 언어를 마스터할 수 있게 도와드립니다.</p>
<h2>B. 각 과목에 공통되는 사항 및 수강신청 안내</h2>
<p>이번에 개강하는 과목 모두에게 적용되는 내용을 안내해 드리겠습니다.</p>
<h3>1. 동영상 강좌만 듣기 vs POCU 아카데미 정식 수강</h3>
<p>동영상 강좌는 그냥 동영상만을 보시는 과정으로 타 온라인 학원들의 인강과 다르지 않습니다. 동영상 중간마다 간단한 퀴즈는 있지만 이는 동영상 강의에 집중하실 수 있도록 도와드리는 개념입니다.</p>
<p>반면에 정규 학기 수강은 총 15주 동안 학기제로 운영되며, 매주 봐야 할 동영상 강의와, 매주 제출해야 하는 실습, 그리고 3주마다 제출해야 하는 과제가 있습니다. 이 외에 중간고사(8주 차)와 기말고사(15주 차)를 보시게 됩니다. POCU 아카데미에서 학기별로 수강하는 한 과목은 컴퓨터 공학과 대학에서 6학점짜리 과목에 준한다고 보시면 됩니다.</p>
<table>
<thead>
<tr>
<th align="center">동영상 강좌만 수강</th>
<th align="center">정규 학기 수강</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">언제든 구입 가능</td>
<td align="center">학기제</td>
</tr>
<tr>
<td align="center">동영상 강좌 제공(평생 소장)</td>
<td align="center">동영상 강좌 제공(평생 소장)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">과제 및 실습(실시간 채점)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">시험</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">토론</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">공식 POCU 성적표</td>
</tr>
</tbody>
</table>
<h3>2. 동영상 강좌만 보려는 분들</h3>
<p>동영상 강좌만 수강하시는 경우, POCU 아카데미 회원 가입을 하실 필요는 없습니다.</p>
<ul>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>가격 및 상세 내용은 POCU 아카데미의 <a href="https://pocu.academy/ko/Courses">과목 안내 페이지</a>를 참조해주세요.</p>
</li>
<li>
<p>수강신청 기간과 상관없이 언제라도 구매하셔서 들을 수 있습니다.</p>
</li>
<li>
<p>구매하신 동영상 강좌는 평생 보실 수 있으며 추후 업데이트도 무료로 받으시게 됩니다.</p>
</li>
</ul>
<h3>3. 실습, 과제, 시험을 포함한 정규 학기를 들으려는 분들</h3>
<p>정규학기의 경우 POCU 아카데미 회원 가입 및 본인 인증이 <strong>반드시</strong> 필요합니다. (영업일로부터 최대 2일이 소요될 수 있습니다. 서둘러 수강 신청해주세요.)</p>
<ul>
<li>
<p>수강신청 기간은 <em><strong>2024년 4월 22일 오전 09시</strong></em>부터 <em><strong>2024년 5월 6일 오전 08시 59분</strong></em>까지 입니다.</p>
</li>
<li>
<p>반드시 POCU 아카데미 회원 가입 및 본인 인증을 완료하셔야 수강 신청이 가능합니다.</p>
</li>
<li>
<p>POCU 아카데미의 <em><strong>2024년 5월 학기는 5월 6일 오전 09시</strong></em>에 시작하여 총 15주간 진행됩니다.</p>
</li>
<li>
<p>주 단위 일정은 현재 POCU 아카데미 웹사이트에서 확인하실 수 있습니다. (약간의 변동은 있을 수 있음)</p>
</li>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>동영상 강좌의 길이는 과목당 총 30시간 정도입니다.</p>
</li>
<li>
<p>주당 강의 시간: 3~4시간</p>
</li>
<li>
<p>주당 실습 시간: 최소 2시간</p>
</li>
<li>
<p>주당 과제 시간: 평균 7시간</p>
</li>
</ul>
<h3>4. 할인</h3>
<p>POCU 아카데미는 다양한 할인 정책을 제공하고 있습니다.</p>
<h4>청강대 재학생, BCIT 재학생</h4>
<p>매 학기 POCU 아카데미는 몇몇 대학교/학과의 재학생들 중 몇 분을 선발하여 특별 할인 혜택을 제공해 드리고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2019/08/24/special-discount-for-ckgame-students.html">청강대 게임학과 할인 안내</a></li>
<li><a href="/ko/2019/12/11/special-discount-for-bcit-cst-students.html">BCIT CST 학과 할인 안내</a></li>
</ul>
<h4>군인 및 42서울 교육생</h4>
<p>다음 그룹에 속하신 분들에게 상시 할인을 제공하고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2022/11/27/military-discount.html">군인 할인 안내</a></li>
<li><a href="/ko/2020/12/25/42seoul-discount.html">42 SEOUL 할인 안내</a></li>
</ul>
<h3>5. 강의 시간 전에 준비할 것들</h3>
<p>8주 차의 중간고사와 15주 차의 기말고사를 볼 때 <strong>반드시</strong> 필요합니다.</p>
<ul>
<li>웹캠</li>
<li>마이크</li>
</ul>
<p>다시 한번 많은 관심 가져주셔서 감사드리며, 5월 학기에서 직접 뵐 수 있기를 바랍니다.</p>
<p>POCU 아카데미의 김포프 드림</p>]]></content><author><name>김포프</name></author><category term="news" /><category term="news" /><summary type="html"><![CDATA[안녕하세요, POCU 아카데미 대표 강사 김포프입니다. POCU 아카데미가 2023년 5월 정규 학기 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 5개 과목으로, COMP2300: 어셈블리 프로그래밍과 COMP3500: 알고리듬 및 자료구조 (Java)를 제외한 모든 과목을 수강하실 수 있습니다.]]></summary></entry><entry><title type="html">2024년 1월 학기 수강 안내</title><link href="https://blog.pocu.academy/ko/2023/11/29/about-january-2024-term.html" rel="alternate" type="text/html" title="2024년 1월 학기 수강 안내" /><published>2023-11-29T00:00:00+00:00</published><updated>2023-11-29T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/11/29/about-january-2024-term</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/11/29/about-january-2024-term.html"><![CDATA[<p>안녕하세요, POCU 아카데미 대표 강사 김포프입니다.<br />
어느덧 2023년도 그 끝을 향해 달려가고 있습니다. 여러분들에게 2023년이 매우 뜻깊은 한해였기를 바랍니다.</p>
<p>POCU 아카데미가 곧 <strong>2024년 1월 정규 학기</strong> 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 4개 과목으로, <a href="https://pocu.academy/ko/Courses/COMP1500">COMP1500: 실무 프로그래밍 입문 (C#)</a>, <a href="https://pocu.academy/ko/Courses/COMP2200">COMP2200: C 언매니지드 프로그래밍</a>, <a href="https://pocu.academy/ko/Courses/COMP2300">COMP 2300: 어셈블리 프로그래밍</a>, <a href="https://pocu.academy/ko/Courses/COMP3500">COMP3500: 알고리듬 및 자료구조 (Java)</a>입니다.</p>
<!--more-->
<h2>A. 과목 소개</h2>
<p>그러면 각 과목에 대해 간단히 설명부터 드리겠습니다. 아래의 순서는 <a href="https://trello.com/c/7TlAQwWQ">저희가 추천하는 수강 순서</a>를 따릅니다.</p>
<h3>1. <a href="https://pocu.academy/ko/Courses/COMP1500">COMP1500: 실무 프로그래밍 입문 (C#)</a> (평점 4.9/5.0)</h3>
<p>POCU 아카데미를 처음 시작하시는 분들이 제일 먼저 들으시는 과목입니다. 타 기관의 입문 강좌와는 달리 한 가지 프로그래밍 언어를 사용하는 법이 아니라 프로그래밍 언어에 상관없이 일류 프로그래머가 되려면 배워야 하는 프로그래밍의 기본을 가르칩니다.</p>
<p>단, 이 과목은 <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B6832340619">‘Hello Coding 프로그래밍’</a> 책을 정독하신 분들을 대상으로 합니다. 프로그래밍 입문(첫걸음) 과목과 대학교 수준의 기초 프로그래밍 과목은 배우는 방법이 완벽히 다릅니다. 전자는 프로그래밍을 전혀 모르는 상황에서 대충 맛만 보려는 분들도 들을 수 있는 과목입니다. 따라서 누군가의 코드를 따라 치면서 스트레스 없이 즐겁게 배울 수 있는 과목입니다. 하지만 후자는 이미 프로그래밍을 업으로 삼겠다고 마음먹으신 분들을 대상으로 하는지라 컴퓨터가 작동하는 원리부터 프로로 살아남기 위해 가져야 하는 자세와 습관 등을 기초부터 매우 찬찬히(그리고 지루하게) 배워나갈 수밖에 없습니다.</p>
<p>취미로 운동을 하시는 분들은 원할 때 아무 때나 나가서 운동을 즐긴다면 프로로 운동을 하시는 분들은 시즌이 열리기 한참 전부터 스프링 캠프에서 지루한 기초체력훈련을 차근차근하는 것과 마찬가지지요. 그것도 수십 년에 걸쳐서요. POCU 아카데미에서 제공하는 COMP1500 과목이 바로 그런 프로를 위한 기초체력 훈련 과정입니다. ‘Hello Coding’ 책을 통해 프로그래머를 업으로 삼겠다고 마음먹으신 분들에게 제대로 된 기본기를 가지게 해 드리겠습니다.</p>
<h3>2. <a href="https://pocu.academy/ko/Courses/COMP2200">COMP2200: C 언매니지드 프로그래밍</a> (평점 4.8/5.0)</h3>
<p>프로그래머의 지속적인 성장에 반드시 필요한 지식 중 하나가 바로 컴퓨터 하드웨어에 대한 이해입니다. 속된 말로 ‘컴퓨터와 결혼한다’라고까지 합니다. 자신이 모는 자동차를 잘 이해하지 못하면 뛰어난 레이서가 될 수 없듯이 자신이 만든 프로그램이 실행될 하드웨어를 이해하지 못하는 프로그래머 역시 한계가 있을 수밖에 없습니다.</p>
<p>C는 하드웨어와 매우 가까운 언어이면서도 대부분의 매니지드 언어와 달리 언매니지드 언어 특유의 기능(예: 메모리 관리)들을 프로그래머가 사용하도록 강제하기 때문에, 하드웨어의 동작 원리를 공부하고 싶은 분들, 혹은 컴퓨터를 더 잘 이해하고 싶은 분들에게 매우 훌륭한 입문용 언매니지드 언어라고 할 수 있겠습니다.</p>
<p>C를 배우셨는데 내가 작성한 코드가 어떻게 어셈블리어로 바뀌는지 혹은 어느 메모리에서 어떻게 실행되는지 모르신다면 그건 그냥 사용 가능한 프로그래밍 언어 중 하나로 C를 배우신 것입니다. POCU 아카데미에서는 C를 통해 하드웨어를 이해할 수 있는 눈을 뜨게 해 드립니다.</p>
<h3>3. <a href="https://pocu.academy/ko/Courses/COMP2300">COMP2300: 어셈블리 프로그래밍</a> (평점 4.7/5.0)</h3>
<p>Great 프로그래머의 필수템, 어셈블리어를 마스터하세요! 어셈블리어는 컴퓨터 프로그래밍의 기초이자 핵심으로, 이를 통해 프로그래머는 컴퓨터의 기본 작동 원리를 깊이 이해할 수 있습니다.</p>
<p>POCU 아카데미에서 제공하는 이 강좌는 단순한 언어 학습을 넘어서, 다양한 환경에서 어셈블리어를 자유롭게 구사할 수 있는 능력을 길러줍니다. 이 강좌의 특별함은 실제 컴퓨터를 직접 제작하는 경험까지 포함한다는 점입니다. 이러한 실습을 통해 수강생들은 하드웨어의 본질을 더욱 깊이 이해하고, 기초 컴퓨터 구조 및 운영체제에 대한 지식을 체계적으로 습득할 수 있습니다.</p>
<p>POCU 아카데미의 독창적이고 철저한 커리큘럼은 이론과 실습을 적절히 조화시켜, 수강생들이 어셈블리어를 통해 컴퓨터 과학의 깊은 이해를 얻을 수 있도록 돕습니다. 이 강좌는 모든 프로그래머가 꼭 경험해야 할 필수 과정으로, 컴퓨터 과학의 기본을 단단히 다지고자 하는 분들에게 적극 추천합니다.</p>
<h3>4. <a href="https://pocu.academy/ko/Courses/COMP3500">COMP3500: 알고리듬 및 자료구조 (Java)</a> (평점 4.9/5.0)</h3>
<p>프로그래머의 업무를 간단히 표현하면 ‘문제를 해결하는 것’입니다. 그렇기에 ‘문제를 해결하는 확실한 방법’인 알고리듬(algorithm)은 프로그래머의 필수 지식으로 종종 거론되곤 합니다.</p>
<p>모든 문제 해결에 토대가 되는 핵심 알고리듬. 그것이 바로 이 강좌에서 가르치는 내용입니다. POCU 아카데미가 지향하는 10년 후에도 살아남는 탑 1% 개발자. 그런 사람이 되려면 수박 겉핥기 식이 아닌 핵심 알고리듬의 동작 원리까지 확실히 알아야겠죠? 이 강좌에서 확실히 이해시켜드립니다. 이 강좌를 들으신 후 알고리듬 문제 사이트에 가서 본인의 실력을 테스트해보세요. 처음 보는 문제인데도 어렵지 않게 해법을 찾아내는 한 단계 업그레이드된 본인의 문제 해결 능력을 느끼실 수 있을 겁니다. 앞으로 실무에서 마주치게 될 새로운 문제들도 큰 어려움이 없겠죠?</p>
<h2>B. 각 과목에 공통되는 사항 및 수강신청 안내</h2>
<p>이번에 개강하는 과목 모두에게 적용되는 내용을 안내해 드리겠습니다.</p>
<h3>1. 동영상 강좌만 듣기 vs POCU 아카데미 정식 수강</h3>
<p>동영상 강좌는 그냥 동영상만을 보시는 과정으로 타 온라인 학원들의 인강과 다르지 않습니다. 동영상 중간마다 간단한 퀴즈는 있지만 이는 동영상 강의에 집중하실 수 있도록 도와드리는 개념입니다.</p>
<p>반면에 정규 학기 수강은 총 15주 동안 학기제로 운영되며, 매주 봐야 할 동영상 강의와, 매주 제출해야 하는 실습, 그리고 3주마다 제출해야 하는 과제가 있습니다. 이 외에 중간고사(8주 차)와 기말고사(15주 차)를 보시게 됩니다. POCU 아카데미에서 학기별로 수강하는 한 과목은 컴퓨터 공학과 대학에서 6학점짜리 과목에 준한다고 보시면 됩니다.</p>
<table>
<thead>
<tr>
<th align="center">동영상 강좌만 수강</th>
<th align="center">정규 학기 수강</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">언제든 구입 가능</td>
<td align="center">학기제</td>
</tr>
<tr>
<td align="center">동영상 강좌 제공(평생 소장)</td>
<td align="center">동영상 강좌 제공(평생 소장)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">과제 및 실습(실시간 채점)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">시험</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">토론</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">공식 POCU 성적표</td>
</tr>
</tbody>
</table>
<h3>2. 동영상 강좌만 보려는 분들</h3>
<p>동영상 강좌만 수강하시는 경우, POCU 아카데미 회원 가입을 하실 필요는 없습니다.</p>
<ul>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>가격 및 상세 내용은 POCU 아카데미의 <a href="https://pocu.academy/ko/Courses">과목 안내 페이지</a>를 참조해주세요.</p>
</li>
<li>
<p>수강신청 기간과 상관없이 언제라도 구매하셔서 들을 수 있습니다.</p>
</li>
<li>
<p>구매하신 동영상 강좌는 평생 보실 수 있으며 추후 업데이트도 무료로 받으시게 됩니다.</p>
</li>
</ul>
<h3>3. 실습, 과제, 시험을 포함한 정규 학기를 들으려는 분들</h3>
<p>정규학기의 경우 POCU 아카데미 회원 가입 및 본인 인증이 <strong>반드시</strong> 필요합니다. (영업일로부터 최대 2일이 소요될 수 있습니다. 서둘러 수강 신청해주세요.)</p>
<ul>
<li>
<p>수강신청 기간은 <em><strong>2023년 12월 18일 오전 09시</strong></em>부터 <em><strong>2024년 1월 1일 오전 08시 59분</strong></em>까지 입니다.</p>
</li>
<li>
<p>반드시 POCU 아카데미 회원 가입 및 본인 인증을 완료하셔야 수강 신청이 가능합니다.</p>
</li>
<li>
<p>POCU 아카데미의 <em><strong>2024년 1월 학기는 1월 1일 오전 09시</strong></em>에 시작하여 총 15주간 진행됩니다.</p>
</li>
<li>
<p>주 단위 일정은 현재 POCU 아카데미 웹사이트에서 확인하실 수 있습니다. (약간의 변동은 있을 수 있음)</p>
</li>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>동영상 강좌의 길이는 과목당 총 30시간 정도입니다.</p>
</li>
<li>
<p>주당 강의 시간: 3~4시간</p>
</li>
<li>
<p>주당 실습 시간: 최소 2시간</p>
</li>
<li>
<p>주당 과제 시간: 평균 7시간</p>
</li>
</ul>
<h3>4. 할인</h3>
<p>POCU 아카데미는 다양한 할인 정책을 제공하고 있습니다.</p>
<h4>청강대 재학생</h4>
<p>매 학기 POCU 아카데미는 청강대 게임학과 재학생 및 휴학생 중 몇 분을 선발하여 특별 할인 혜택을 제공해 드리고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2019/08/24/special-discount-for-ckgame-students.html">청강대 게임학과 할인 안내</a></li>
</ul>
<h4>군인 및 42서울 교육생</h4>
<p>다음 그룹에 속하신 분들에게 상시 할인을 제공하고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2022/11/27/military-discount.html">군인 할인 안내</a></li>
<li><a href="/ko/2020/12/25/42seoul-discount.html">42 SEOUL 할인 안내</a></li>
</ul>
<h3>5. 강의 시간 전에 준비할 것들</h3>
<p>8주 차의 중간고사와 15주 차의 기말고사를 볼 때 <strong>반드시</strong> 필요합니다.</p>
<ul>
<li>웹캠</li>
<li>마이크</li>
</ul>
<p>다시 한번 많은 관심 가져주셔서 감사드리며, 2024년 새해 1월 학기에서 직접 뵐 수 있기를 바랍니다.</p>
<p>POCU 아카데미의 김포프 드림</p>]]></content><author><name>김포프</name></author><category term="news" /><category term="news" /><summary type="html"><![CDATA[안녕하세요, POCU 아카데미 대표 강사 김포프입니다. 어느덧 2023년도 그 끝을 향해 달려가고 있습니다. 여러분들에게 2023년이 매우 뜻깊은 한해였기를 바랍니다. POCU 아카데미가 곧 2024년 1월 정규 학기 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 4개 과목으로, COMP1500: 실무 프로그래밍 입문 (C#), COMP2200: C 언매니지드 프로그래밍, COMP 2300: 어셈블리 프로그래밍, COMP3500: 알고리듬 및 자료구조 (Java)입니다.]]></summary></entry><entry><title type="html">청강문화산업대학교 게임학과 재학생 인터뷰 9: 차민혁님 님</title><link href="https://blog.pocu.academy/ko/2023/10/10/ck-interview-minhyeock-cha-who-is-passionate-about-programming.html" rel="alternate" type="text/html" title="청강문화산업대학교 게임학과 재학생 인터뷰 9: 차민혁님 님" /><published>2023-10-10T00:00:00+00:00</published><updated>2023-10-10T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/10/10/ck-interview-minhyeock-cha-who-is-passionate-about-programming</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/10/10/ck-interview-minhyeock-cha-who-is-passionate-about-programming.html"><![CDATA[<p>안녕하세요. 윤아입니다! POCU 아카데미 수강생 여러분.<br />
오늘은 프로그래밍에 매력에 빠져 국비 교육부터 학교 진학까지 단숨에 쉬지 않고 달려온 차민혁님의 인터뷰입니다.</p>
<!--more-->
<center><img src ="https://pocu.academy/images/home/partner/ck_university_logo.png"></center>
<h4>안녕하세요. 간단한 자기소개부터 부탁드립니다</h4>
<p>안녕하세요, 현재 청강문화산업 대학교에 재학 중인 차민혁이라고 합니다.</p>
<h4>프로그래밍에 어떻게 관심을 가지게 되셨나요? 어떻게 프로그래밍에 입문하시게 되셨나요</h4>
<p>처음 제가 관심을 가지게 된 계기는 주변에 계신 어떤 분이 프로그래밍 하시는 모습을 직접 보고 난 후 부터입니다. 처음엔 ‘아 프로그래밍을 하시는 분이구나; 정도로 생각했었는데, 시간이 지날수록 ‘나도 한 번 프로그래밍에 입문해 볼까’라는 생각에 빠져버렸습니다.</p>
<p>프로그래밍 사실 국비지원 교육을 통해 JAVA로 처음 입문했습니다. 웹 디자인 과목이었기 때문에 엄청 깊은 수준으로 배운 것은 아니지만, 처음 입문자였기 때문에 오히려 저에게 딱 맞는 과정이었다고 생각합니다.</p>
<p>덕분에 프로그래밍에 흥미도 생겼고, 국비 교육만으로 부족하다는 점도 느끼게 돼서 학교까지 진학하고 싶다는 동기와 열망이 생겼습니다.</p>
<h4>그렇다면 프로그래밍에 대한 이해가 어느 정도 있으셨군요! POCU 아카데미는 어떻게 알게 되셨나요</h4>
<p>학교에서 같은 강의를 듣는 친구가 POCU 아카데미를 소개해 주었습니다. 마침 저도 프로그래밍에 대해 기초를 더 탄탄하게 만들고 싶어서 인강이나 교재 같은 이것저것 찾던 중 소개를 받았고, 너무 마음에 들더라고요. 좋은 기회를 놓칠 수 없었습니다.</p>
<h4>후후 좋은 친구를 두셨군요. POCU 아카데미에서는 그럼 어떤 과목을 수강하셨나요</h4>
<p>COMP1500 실무 프로그래밍 입문을 과목을 수강했습니다.</p>
<h4>그 과목을 듣기 전에 기대했던 점은 무엇이고, 실제 그 강의가 기대에 부합했나요</h4>
<p>C# 언어에 대한 기본기를 체계적으로 배우려고 했습니다. 아무래도 기본기를 더 다져두는 게 낫다고 생각해서요. 실제로 POCU에서 제공해 주는 강의는 아주 기초부터 시작해서 코딩 표준, 예상치 못한 변수를 찾아내는 능력 등 제가 기대한 거 이상의 강의였기 때문에 아주 마음에 들었습니다.</p>
<h4>이번에는 과목을 들으시면서 아쉬웠던 거나 어려웠던 점에 대해서 공유 부탁드립니다</h4>
<p>음.. 저는 강의 자체에 대한 아쉬움은 없었습니다. 오히려 제가 학기 후반부터 중간고사랑 자체 프로젝트 같이 너무 여러 가지 일로 정신이 없어져서 POCU 아카데미 강의에 더 집중하지 못한 게 아쉬웠습니다.</p>
<h4>POCU 아카데미를 수강하고 난 뒤 변화가 있었나요? 취업, 학점처럼 실질적인 변화나 아니면 마음가짐이 어떻게 변했는지 말씀해 주셔도 좋습니다</h4>
<p>제가 생각한 것보다 저는 기본을 더 충실히 쌓아야 하고 더 노력해야 한다는 생각을 가지게 되었습니다.<br />
초반에는 분명 제가 어느 정도 프로그래밍을 알고 있다는 입장이라서 수월하게 넘어갔었습니다. 그러나 후반부는 신경을 잠깐 놓쳤더니, 어느새 제 실력이 강의에서 필요로 하는 요구치보다 한참 아래에 있다는 걸 뼈저리게 느꼈습니다.</p>
<p>앞으로 기초가 더 튼튼하고 발전된 프로그래머가 되기 위해서 더 노력하겠습니다.</p>
<h4>기본기가 중요하죠 암 그럼요. 추후 계획은 어떻게 되나요? 멋진 꿈이 있으시다면 공유 부탁드립니다</h4>
<p>원대하고 멋진 그런 꿈까지는 아니지만, 제가 기르던 고양이의 스토리를 녹인 게임을 제작하고 싶습니다.</p>
<p>너무 소중한 가족으로서 저희 집에 늘 행복을 가져다준 소중한 아이였기 때문에, 제가 프로그래밍 실력이 발전한다면 언젠가 그 아이와의 추억을 녹인 게임을 만들고 싶어요. 그리고 그 게임을 언젠가 또 다른 사람들과 공유하고 싶은 마음입니다.</p>
<h4>아닙니다. 너무 멋지고 의미 있는 꿈이에요! 그렇다면 민혁님이 미래의 POCU 아카데미 수강생에게 하시고 싶은 조언! 부탁드립니다</h4>
<p>제 경험을 살려, 초반부가 쉽다고 여유 부릴 수 없다고 말씀드리고 싶습니다
저도 중반부까지는 조금 템포를 느리게 가져가도 충분히 따라갈만했고, 과제나 실습도 솔직히 어렵지 않게 해결할 수 있었습니다.</p>
<p>그러나 후반부로 가면 갈수록 난이도가 어려워지기도 하고, 본인의 상황에 따라서 학습 시간이 부족해질 수도 있습니다. 그렇기 때문에 모든 시기에 최선을 다해 미리미리 학습하시는 것을 추천해 드립니다. 언제나 전력으로 학습에 따라가신다면 충분히 많은 배움을 얻고 가실 것이라 생각됩니다.</p>
<p>POCU 아카데미를 수강하시는 분들! 모두 화이팅!</p>
<h4>끝으로 기타 하시고 싶은 말씀이 있으시다면 자유롭게 해주세요</h4>
<p>이번엔 아쉽게 수료를 끝마치지 못했지만 다음번엔 더 확실하게 공부하고 스케줄도 조절 능력까지 마스터해서 수료하고 싶다는 마음가짐입니다.</p>
<p>정말 좋은 기회였고, 저에게도 큰 발전이 된 강좌라고 생각하기 때문에 앞으로도 더 좋고 많은 강의에 나중에라도 참여하고 싶습니다.</p>
<p>감사합니다!</p>]]></content><author><name>윤아</name></author><category term="news" /><category term="interview" /><category term="news" /><summary type="html"><![CDATA[안녕하세요. 윤아입니다! POCU 아카데미 수강생 여러분. 오늘은 프로그래밍에 매력에 빠져 국비 교육부터 학교 진학까지 단숨에 쉬지 않고 달려온 차민혁님의 인터뷰입니다.]]></summary></entry><entry><title type="html">가이드: 애플 실리콘 Mac에서 x86 프로그램 빌드 및 디버깅하기</title><link href="https://blog.pocu.academy/ko/2023/10/09/how-to-build-and-debug-x86-program-on-apple-silicon-mac.html" rel="alternate" type="text/html" title="가이드: 애플 실리콘 Mac에서 x86 프로그램 빌드 및 디버깅하기" /><published>2023-10-09T00:00:00+00:00</published><updated>2023-10-09T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/10/09/how-to-build-and-debug-x86-program-on-apple-silicon-mac</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/10/09/how-to-build-and-debug-x86-program-on-apple-silicon-mac.html"><![CDATA[<p>안녕하세요! POCU 아카데미 수강생 여러분. 윤아입니다!</p>
<p>POCU 아카데미에서 원활한 수강을 위해 권장하는 운영체제는 윈도우이지만 리눅스나 Mac을 사용하셔도 POCU 아카데미의 모든 수업을 들을 수 있답니다!</p>
<p>그런데 최근에 나온 Mac 컴퓨터를 사용하면 <a href="https://pocu.academy/ko/Courses/COMP2300">COMP2300: 어셈블리 프로그래밍</a> 과목에서 x86 인라인 어셈블리 프로그래밍을 할 때 다소 어려움이 있을 수 있는데요. 그건 최근 Mac 컴퓨터가 사용하는 CPU가 x86 기계어를 실행할 수 없기 때문입니다.</p>
<p>하! 지! 만! POCU 아카데미가 이에 대해 대책도 없이 이 수업을 만들었을 리가 없죠. 엣헴!</p>
<p>그래서 이번 가이드에서는 <strong>애플 실리콘 Mac에서 x86 프로그램을 빌드 및 디버깅</strong>하는 방법을 소개하겠습니다!</p>
<!--more-->
<p>이 글은 <code>macOS 14.0 Sonoma</code>를 기준으로 작성되었음을 미리 알려드립니다.</p>
<h2>UTM 설치하기</h2>
<p>첫 번째로 할 일은 애플 실리콘 Mac 컴퓨터에서 x86 리눅스 운영체제를 에뮬레이션 할 수 있도록 UTM을 설치하는 것입니다.</p>
<ol>
<li>웹 브라우저를 열어 <a href="https://github.com/utmapp/UTM/releases/tag/v4.3.5">UTM의 v4.3.5 Release 페이지</a>로 갑니다.</li>
<li><code>Assets</code>에서 <code>UTM.dmg</code>를 다운로드합니다.</li>
<li>다운로드가 완료되면 <code>UTM.dmg</code>를 더블 클릭합니다.</li>
<li><code>UTM.app</code>을 <code>Applications</code> 폴더로 드래그합니다.</li>
</ol>
<h2>x86 가상머신 만들기</h2>
<p>다음은 UTM에 x86 가상머신을 만들 차례입니다. 이 가상머신에서 코드를 빌드하고 디버깅할 예정입니다.</p>
<ol>
<li>웹 브라우저를 열어 <a href="https://releases.ubuntu.com/jammy/">Ubuntu 22.04.3 LTS Jammy Jellyfish 다운로드 페이지</a>로 갑니다</li>
<li>제일 아래 목록에서 <code>ubuntu-22.04.3-live-server-amd64.iso</code>를 다운로드합니다. <a href="https://releases.ubuntu.com/jammy/ubuntu-22.04.3-live-server-amd64.iso">곧바로 다운로드하는 링크</a>
<ul>
<li><strong>주의</strong>: 반드시 Desktop이 아닌 <code>Server 버전</code>을 받으세요. 에뮬레이션 환경에서 Desktop 버전의 그래픽을 그리는 건 매우 느리거든요!</li>
</ul>
</li>
<li>UTM을 실행합니다.</li>
<li><code>+</code>를 클릭한 뒤, <code>Emulate</code>를 선택합니다.</li>
<li>운영체제를 고르는 화면이 나오면 <code>Linux</code>를 클릭합니다.</li>
<li>이제 <code>Browse</code> 버튼을 눌러 앞서 다운로드하였던 <code>.iso</code>파일을 선택한 뒤, <code>Open</code> 버튼을 누릅니다.</li>
<li><code>Continue</code> 버튼을 누릅니다.</li>
<li>하드웨어(Hardware) 설정화면에서 아무것도 바꾸지 말고 <code>Continue</code>를 누릅니다.</li>
<li>드라이브 저장 용량(Storage)을 묻는 화면이 나오면 <code>10 GB</code>로 변경하고 <code>Continue</code>를 누릅니다.
<ul>
<li>실제 Ubuntu server가 권장하는 용량을 25 GB입니다.</li>
<li>개발을 위해 이것저것 설치하면 실제로는 6 GB 정도 차지합니다.</li>
</ul>
</li>
<li>공유 디렉터리(Shared Directory) 화면이 나오면 <code>Browse</code>를 눌러 POCU 아카데미에 코드 제출을 위해 설정해 둔 git 저장소의 루트 폴더를 선택합니다.<br />
(이래야 코드 편집은 내 Mac에서! 빌드 및 디버깅은 가상머신에서 할 수 있답니다!)</li>
<li><code>Continue</code>를 누른 뒤, <code>Save</code>를 누릅니다.</li>
</ol>
<h2>x86 가상머신에 리눅스 설치하기</h2>
<p>다음은 새로 만든 가상머신에 x86 리눅스 운영체제를 설치할 차례입니다. <del>중간중간 기다려야 할 일이 있으니 재밌는 너튜브나 웹툰을 준비해 두세요</del></p>
<ol>
<li>UTM에서 새로 생긴 가상머신 오른쪽에 플레이 버튼이 보일 겁니다. 이 버튼을 눌러 가상머신을 부팅합니다.</li>
<li><code>GNU GRUB</code> 페이지가 나오면 <code>Try or Install Ubuntu Server</code>를 선택합니다.</li>
<li>대략 3분 정도 <del>너튜브를 보며</del> 기다립니다.</li>
<li><code>언어 선택</code> 페이지가 나오면 <code>English</code>를 선택합니다.</li>
<li><code>Installer update available</code> 페이지가 나오면 <code>Continue without updating</code>을 선택합니다.</li>
<li><code>Keyboard configuration</code> 페이지가 나오면 <code>Done</code>을 선택합니다.</li>
<li><code>Choose type of install</code> 페이지가 나오면 <code>Done</code>을 선택합니다.</li>
<li><code>Network connections</code> 페이지가 나오면 IP 주소를 자동으로 받아올 때까지 기다린 후(30초 미만) <code>Done</code>을 선택합니다.</li>
<li><code>Configure proxy</code> 페이지가 나오면 <code>Done</code>을 선택합니다.</li>
<li><code>Configure Ubuntu archive mirror</code> 페이지가 나오면 <code>This mirror location passed tests</code>라는 메시지가 나올 때까지 기다린 후(30초 미만), <code>Done</code>을 선택합니다.</li>
<li><code>Guided storage configuration</code> 페이지가 나오면, 아무 옵션도 바꾸지 말고 <code>Done</code>을 선택합니다.</li>
<li><code>Storage configuration</code> 페이지가 나오면 <code>Done</code>을 선택합니다.</li>
<li><code>Confirm destructive action</code> 팝업이 나오면 <code>Continue</code>를 선택합니다.</li>
<li><code>Profile setup</code> 페이지가 나오면 정보를 채워 넣은 뒤, <code>Done</code>을 선택합니다.</li>
<li><code>Upgrade to Ubuntu Pro</code> 페이지가 나오면 <code>Continue</code>를 선택합니다.</li>
<li><code>SSH Setup</code> 페이지가 나오면 아무것도 바꾸지 말고 <code>Done</code>을 선택합니다.</li>
<li><code>Featured Server Snaps</code> 페이지가 나오면 아무것도 바꾸지 말고 <code>Done</code>을 선택합니다.</li>
<li>이제 설치가 끝나려면 12분 정도 기다립니다. ~~자~ 재밌는 웹툰이라도 몇 편 보고 오자구요!~~</li>
<li>설치가 끝나고 <code>Reboot now</code>라는 메시지가 나오면, 그냥 x 버튼을 눌러 창을 닫습니다.</li>
<li>UTM에서 내 가상머신을 선택하면 제일 아래쪽에 CD/DVD가 있는데 그걸 <code>Clear</code> 합니다.</li>
</ol>
<p>후~ 리눅스 설치 과정 정말 길었네요. 아직 조금 더 남았습니다! 우리 모두 힘내봅시다! (^0^)/</p>
<h2>가상머신에 공유 폴더 마운트하기</h2>
<p>이제 내 Mac에서 코드를 편집하면 가상머신에서 곧바로 빌드할 수 있도록 공유 폴더를 마운트 할 차례입니다.</p>
<ol>
<li>UTM에서 내 가상머신 오른쪽에 있는 플레이 버튼을 눌러 가상머신을 부팅합니다.</li>
<li>설치 중에 설정했던 로그인 정보를 사용해서 로그인합니다.</li>
<li>화면이 멈춘 것 같아 보이면 <code>enter</code> 키를 한 번 치면 프롬프트 창이 나올 겁니다.</li>
<li><code>cd /media</code>를 입력해 <code>/media</code>로 현재 폴더를 변경합니다.</li>
<li><code>sudo mkdir pocu</code>를 입력하여 <code>pocu</code>라는 이름의 폴더를 만듭니다. 이 폴더에 공유 폴더를 마운트 할 예정입니다.</li>
<li><code>sudo mount -t 9p -o trans=virtio share pocu -oversion=9p2000.L</code>를 입력하여 공유 폴더를 마운트합니다.</li>
<li><code>ls pocu</code>를 입력하여 실제 공유 폴더에 있는 파일들이 잘 보이는지 확인합니다.</li>
<li><code>sudo chown -R $USER pocu</code>를 입력하여 가상머신에서 이 폴더에 있는 파일들을 수정할 수 있도록 권한을 변경합니다.</li>
<li>부팅할 때마다 자동으로 이 폴더를 마운트 하려면 다음처럼 설정해 주세요.
<ol>
<li><code>sudo vim /etc/fstab</code>을 입력하여 <code>/etc/fstab</code> 파일을 vim 에디터 안에서 엽니다.</li>
<li><code>i</code> 키를 눌러 편집 모드로 변경합니다.</li>
<li>화살표 키를 이용하여 제일 마지막 줄로 이동한 뒤, 엔터키를 눌러 새 줄을 만듭니다.</li>
<li>새 줄에 다음 내용을 입력합니다.
<code>share /media/pocu 9p trans=virtio,version=9p2000.L,rw,_netdev,nofail 0 0</code></li>
<li><code>esc</code> 키를 눌러 편집 모드를 종료합니다.</li>
<li><code>:wq</code>를 입력하여 저장 후 vim 에디터를 종료합니다.</li>
</ol>
</li>
</ol>
<h2>x86 가상머신에서 빌드하기</h2>
<p>이제 x86 가상머신에 C 컴파일러인 clang을 설치해 보겠습니다. 이 컴파일러를 통해 x86 프로그램을 빌드할 수 있답니다.</p>
<ol>
<li>
<p><code>sudo apt-get update</code>를 입력하여 패키지 목록을 업데이트합니다.</p>
</li>
<li>
<p><code>sudo apt install clang</code>을 실행하여 clang 컴파일러를 설치합니다.</p>
</li>
<li>
<p><code>sudo apt install gcc-multilib</code>을 실행하여 32비트용 라이브러리를 설치합니다.</p>
</li>
<li>
<p>내 Mac에서 공유 폴더에 <code>main.c</code> 파일을 추가합니다. 내용은 다음과 같습니다.</p>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code data-lang="c"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">add</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">res</span><span class="p">;</span>

    <span class="kr">__asm</span> <span class="p">(</span>
        <span class="s">"mov %0,%1</span><span class="se">\n</span><span class="s">"</span>
        <span class="s">"add %0,%2</span><span class="se">\n</span><span class="s">"</span>
        <span class="o">:</span> <span class="s">"=r"</span><span class="p">(</span><span class="n">res</span><span class="p">)</span>
        <span class="o">:</span> <span class="s">"r"</span><span class="p">(</span><span class="n">a</span><span class="p">),</span> <span class="s">"r"</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
        <span class="o">:</span>
    <span class="p">);</span>

    <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"Hello World! %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">));</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
</li>
<li>
<p>가상머신에서 이 프로그램을 빌드합니다.
<code>clang -std=c89 -Wall -pedantic-errors -masm=intel -m32 main.c</code></p>
</li>
<li>
<p>이제 <code>./a.out</code>을 입력하여 프로그램을 실행합니다. 화면에 다음의 결과가 출력될 것입니다.
<code>Hello World! 3</code></p>
</li>
</ol>
<h2>x86 가상머신에서 디버깅하기</h2>
<p>아무리 천재 프로그래머라도 디버거가 필요할 때가 있죠? LLDB를 사용하면 GUI 없이도 디버깅을 할 수 있답니다.</p>
<ol>
<li><code>sudo apt install lldb</code>을 입력하여 LLDB 디버거를 설치합니다.</li>
<li><code>lldb a.out</code>을 입력하여 LLDB 디버거를 실행합니다.</li>
<li><code>breakpoint set --name add</code>를 입력하여 <code>add</code> 함수에 중단점(breakpoint)을 설정합니다.</li>
<li><code>run</code> 혹은 <code>r</code>을 입력하여 프로그램을 실행합니다. <code>add</code> 함수에서 프로그램 실행이 멈출 것입니다.</li>
<li><code>step</code> 혹은 <code>s</code>를 입력하여 코드를 한 줄 실행합니다.</li>
<li><code>quit</code>을 입력하여 디버거를 종료합니다.</li>
<li>이제 <code>-g -O0</code> 컴파일러 옵션을 추가하여 <code>main.c</code>를 다시 빌드한 뒤, 다시 LLDB 디버거를 사용해 봅니다.</li>
</ol>
<h2>마치며</h2>
<p>자, 어떠셨나요? POCU 아카데미 수강생 여러분들이라면 큰 문제없이 따라오셨을 거라 생각합니다!
혹시라도 LLDB의 자세한 사용법을 알고 싶으시다면 다음 글들을 참고하세요. ^^</p>
<ul>
<li><a href="https://lldb.llvm.org/use/tutorial.html">lldb 튜토리얼(영문)</a></li>
<li><a href="https://eunbin00.tistory.com/83">lldb 사용법(한글)</a></li>
</ul>
<p>그럼 또 다른 가이드에서 뵐께요~ 모두 즐거운 POCU 되세요~!</p>]]></content><author><name>윤아</name></author><category term="week1" /><category term="guide" /><category term="bundle-2300" /><category term="mac" /><summary type="html"><![CDATA[안녕하세요! POCU 아카데미 수강생 여러분. 윤아입니다! POCU 아카데미에서 원활한 수강을 위해 권장하는 운영체제는 윈도우이지만 리눅스나 Mac을 사용하셔도 POCU 아카데미의 모든 수업을 들을 수 있답니다! 그런데 최근에 나온 Mac 컴퓨터를 사용하면 COMP2300: 어셈블리 프로그래밍 과목에서 x86 인라인 어셈블리 프로그래밍을 할 때 다소 어려움이 있을 수 있는데요. 그건 최근 Mac 컴퓨터가 사용하는 CPU가 x86 기계어를 실행할 수 없기 때문입니다. 하! 지! 만! POCU 아카데미가 이에 대해 대책도 없이 이 수업을 만들었을 리가 없죠. 엣헴! 그래서 이번 가이드에서는 애플 실리콘 Mac에서 x86 프로그램을 빌드 및 디버깅하는 방법을 소개하겠습니다!]]></summary></entry><entry><title type="html">청강문화산업대학교 게임학과 재학생 인터뷰 8: 너겟 님</title><link href="https://blog.pocu.academy/ko/2023/09/25/ck-interview-nugget-who-studies-video-game-graphics.html" rel="alternate" type="text/html" title="청강문화산업대학교 게임학과 재학생 인터뷰 8: 너겟 님" /><published>2023-09-25T00:00:00+00:00</published><updated>2023-09-25T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/09/25/ck-interview-nugget-who-studies-video-game-graphics</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/09/25/ck-interview-nugget-who-studies-video-game-graphics.html"><![CDATA[<p>안녕하세요! POCU 아카데미 수강생 여러분. 윤아입니다!<br />
그래픽을 주력으로 전공하다가 우연히 듣게 된 프로그래밍에 빠지셨다는, 청강대 재학생 너겟님을 만나보았는데요. 너겟님의 스토리를 들으러 가볼까요?</p>
<!--more-->
<center><img src ="https://pocu.academy/images/home/partner/ck_university_logo.png"></center>
<h4>안녕하세요. 자기소개 부탁드립니다</h4>
<p>안녕하세요! 청강대 게임과에 재학 중인 너겟이라고 합니다. 너무 반갑습니다! 현재 일러스트를 주력으로 그래픽을 전공하고 있답니다. 아직 프로그래밍 쪽은 완전 초보 중의 초보입니다. ☺</p>
<h4>그래픽 전공에서 프로그래밍에 관심을 가지게 된 계기가 있나요? 그리고 어떻게 프로그래밍에 입문하셨나요? 너무 궁금합니다</h4>
<p>1학년 때 우연히 듣게 된 프로그래밍 기초 수업으로 처음 접하게 되었는데, 이때 한 번 맛보고 난 뒤로 좀 더 알고 싶다는 생각을 가지고 있었습니다. 저는 원래 새로운 분야를 배워보는 거 자체를 좋아하기도 했기 때문에, 마침 관심 있던 프로그래밍에 별 부담 없이 발을 들일 수 있었던 거 같아요.</p>
<h4>대단합니다! 그렇다면 어떻게 POCU 아카데미에 대해 알게 되셨나요</h4>
<p>친구가 SNS에 올라온 POCU의 홍보 글을 공유해 주어서 처음 알게 되었습니다. 커리큘럼이나 강의 소개 영상 등까지 직접 하나하나 찾아봤는데, 왜인지 믿음직스러워서 단숨에 수강신청까지 갔었던 기억이 남아있네요 ㅎㅎ</p>
<h4>POCU 아카데미에서 어떤 과목을 수강하셨나요</h4>
<p>저는 COMP1500 실무 프로그래밍 입문을 수강했습니다. 저한테는 실무적인 게 딱 맞는다고 생각했어요.</p>
<h4>그 과목을 듣기 전에 기대했던 점은 무엇이고, 실제 그 강의가 기대에 부합했나요</h4>
<p>음.. 저는 뭐든지 첫 단추가 가장 중요하다고 생각했습니다. 특히 저는 올바른 방향으로 기본기를 쌓는 것이 목표였습니다. 어떤 분야든 나쁜 습관을 가지고 기초를 쌓게 되면 나중에 배로 고생을 하게 된다고 생각합니다. 그래서 처음 배우는 거라면 제대로 배우고 싶었습니다. POCU가 저에게 제시한 커리큘럼은 여기에 딱 알맞은 답이었어요.</p>
<p>제가 솔직히 수업을 듣기 전에 가장 기대했던 건 ‘나도 이걸 들으면 여기에 나와있는 것들을 이제는 전부 이해하게 될 수 있지 않을까?’였어요. 이전까지는 아무것도 모르는 채로 코드를 보면 정말 답답한 기분이 들었습니다. 그래서 배우고 나서는 그 답답함이 해소될 거라고 생각했거든요. 물론 입문 수업이다 보니 완벽하게 이해하는 건 불가능했어요 ㅎㅎ.</p>
<p>아마 계속 프로그래밍을 공부하면서도 어떤 막막함이 함께하게 될 거 같습니다. 그러나 이건 기분 나쁜 막막함이 아닐 거 같아요. 기존의 점점 풀려가면서, 앞으로도 더욱 알아가는 재미가 있을 거라고 기대되었습니다.</p>
<h4>확실히 어떤 학구열이 느껴지는 답변입니다! 그렇다면 과목을 들으시면서 아쉬웠던 거나 어려웠던 점이 있을까요? 공유 부탁드립니다</h4>
<p>초기 실습과 과제를 따라가는 것이 많이 어려웠습니다. 강의 내용을 소화하고 실습까지 진행하는데 제 예상보다 훨씬 많은 노력과 시간이 필요했습니다. 저는 일정관리에 원래 좀 미숙한 편인데, 그래픽 공부랑 병행해도 끝까지 다 해낼 수 있을 거라는 오만한? 생각을 가지고 수업을 들었더니 기말즈음에 는 많이 참여를 못한 것이 아쉬운 부분으로 남았네요.</p>
<p>그 외에는 아무래도 실시간 수업은 아니다 보니 직접 목소리로 피드백을 듣거나 교류를 한다는 느낌이 적어서 좀 쳐질 때 외로웠던 거 같습니다. (물론 프로그래밍이란 게 원래도 그런 느낌이 없잖아 있는 거 같기도 합니다!)</p>
<h4>그렇다면 POCU 아카데미를 수강하고 난 뒤 어떤 변화가 있었나요? 취업, 학점 등의 실질적인 변화도 좋고, 마음가짐의 변화도 좋습니다</h4>
<p>프로그래밍 분야가 굉장히 넓고 공부할 것도 많은 와중에… 여전히 저는 왕초보 수준에 머물러 있다고 느끼고 있습니다. 아직 많이 멀었다고 느꼈어요. 그러나 프로그래밍을 잘 모르는 사람들이 흔히 가지고 있는 어떤 막연한 두려움은 많이 사라진 거 같습니다!
전에는 모르는 에러 코드가 뜨면 겁부터 먹었는데 지금은 침착하게 생각해 보고, 문제점을 찾아보며 어떤 오류든 해결 방법을 찾을 수 있다는 느낌을 받고 있습니다. 이게 꼭 프로그래밍이 아니라 할지라도 저의 학습능력과 태도 자체가 향상되었다고 느낍니다.</p>
<h4>좋은 답변 감사합니다! 추후 계획은 어떻게 되나요? 멋진 꿈이 있으실 거 같은데 공유 부탁드릴게요</h4>
<p>음.. 자랑스럽게 말할만한 꿈은 솔직히 없습니다. 그렇지만 후에 어떤 일을 하게 되더라도 1인분은 잘 해낼 수 있는, 계속 필요로 하는 사람이 되고 싶습니다. 기회가 된다면 배운 걸 활용해서 재미있는 게임도 한 번 만들어 보고 싶고요!
당장은 프로그래밍 공부는 서브로 두고 계속 이어갈 것 같지만, 여유가 생기면 후에 다른 POCU 강의도 듣고자 합니다.</p>
<h4>미래의 POCU 아카데미 수강생에게 하시고 싶은 조언이 있다면 한 말씀 부탁드립니다</h4>
<p>프로그래밍을 공부해 보고 싶으신 분이라면 당연히 적극! 추천드리고 싶습니다. 특히 저와 같은 초심자분들이라면 특히 얻어 가는 게 많은 거라고 생각합니다 ☺
다만 수업을 따라가는 건 그만큼 빡세기 때문에 각오 단단히 하셔야 될 거예요. 학기를 완주하시기 위해 마음의 준비가 필요하답니다. 겁을 주려는 건 아니지만 제대로 수업을 내 거로 만들려면 POCU 강의만 수강해도 여유롭진 않을 거라 생각해요.</p>
<h4>끝으로 하시고 싶은 말씀이 있으시다면 자유롭게 해 주세요</h4>
<p>앞으로도 멈추지 않고 열심히 공부하겠습니다. POCU에서 제공해 주신 좋은 강의와 경험을 통해 거 많이 알아가고 싶습니다. 감사합니다!</p>]]></content><author><name>윤아</name></author><category term="news" /><category term="interview" /><category term="news" /><summary type="html"><![CDATA[안녕하세요! POCU 아카데미 수강생 여러분. 윤아입니다! 그래픽을 주력으로 전공하다가 우연히 듣게 된 프로그래밍에 빠지셨다는, 청강대 재학생 너겟님을 만나보았는데요. 너겟님의 스토리를 들으러 가볼까요?]]></summary></entry><entry><title type="html">2023년 9월 학기 수강 안내</title><link href="https://blog.pocu.academy/ko/2023/08/22/about-september-2023-term.html" rel="alternate" type="text/html" title="2023년 9월 학기 수강 안내" /><published>2023-08-22T00:00:00+00:00</published><updated>2023-08-22T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/08/22/about-september-2023-term</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/08/22/about-september-2023-term.html"><![CDATA[<p>안녕하세요, POCU 아카데미 대표 강사 김포프입니다.</p>
<p>POCU 아카데미가 <strong>2023년 9월 정규 학기</strong> 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 5개 과목으로, 아래 과목 소개란에서 확인하실 수 있습니다. <strong>특히 저번 학기에 첫 개강한 <a href="https://pocu.academy/ko/Courses/COMP2300">COMP 2300: 어셈블리 프로그래밍</a>을 할인가에 들으실 수 있는 마지막 기회이니 이번 기회를 놓치지 마세요.</strong></p>
<!--more-->
<h2>A. 과목 소개</h2>
<p>그러면 각 과목에 대해 간단히 설명부터 드리겠습니다. 아래의 순서는 <a href="https://trello.com/c/7TlAQwWQ">저희가 추천하는 수강 순서</a>를 따릅니다.</p>
<h3>1. <a href="https://pocu.academy/ko/Courses/COMP1000">COMP1000: 소프트웨어 공학용 수학</a> (평점 4.8/5.0)</h3>
<p>순수 수학에서 흔히 볼 수 있는 이론과 증명은 현실 세계를 이해하려는 지난 수백 년 동안의 노력의 결과물입니다. 하지만 컴퓨터의 발전과 함께 이제는 디지털 세계가 현실 세계의 일부가 되었습니다. 이런 디지털 세계를 구축하고 그 속의 문제들을 해결하는 소프트웨어 공학자에게 이론 중심의 전통적인 수학은 다소 모자란 부분이 있습니다. 고로, 본 강좌는 이론/증명 위주가 아닌 실용성 위주의 수학 및 컴퓨터를 이해하는데 중요한 수학에 중점을 두어 진행합니다.</p>
<p>이 과목은 학생분들의 만족도가 매우 높은 과목입니다. 내용의 구성이나 평가 방법 등이 정말 프로그래머를 위한 제대로 된 첫 수학 과목이라는 평을 받기에 충분하다고 말씀들 하십니다.</p>
<p>이 수업을 성공적으로 마치시면 머리로만 어렴풋이 이해하고 있던 수학의 내용들을 프로그래밍으로 확실히 옮기실 수 있을 것이라고 보장합니다.</p>
<h3>2. (<strong>신규 과목, 15% 할인</strong>) <a href="https://pocu.academy/ko/Courses/COMP2300">COMP2300: 어셈블리 프로그래밍</a> (평점 4.6/5.0)</h3>
<p>Great 프로그래머의 필수템, 어셈블리어를 마스터하세요. 이 강좌는 다양한 환경에서 어셈블리어를 자유롭게 구사할 수 있는 능력을 길러줍니다. 심지어 컴퓨터를 직접 제작하는 경험까지 포함되어 있죠! POCU 아카데미의 독창적이고 철저한 커리큘럼을 통해 하드웨어의 본질을 깊이 이해하고, 기초 컴퓨터 구조와 운영체제의 세계를 완벽하게 습득하세요!</p>
<h3>3. <a href="https://pocu.academy/ko/Courses/COMP2500">COMP2500: 개체지향 프로그래밍 및 설계 (Java)</a> (평점 4.9/5.0)</h3>
<p>’인간이 생각하는 방식으로 프로그래밍 하자!’라는 야심찬 목표를 가지고 시작한 개체지향 프로그래밍(OOP, Object-Oriented Programming)은 이제 주류 프로그래밍 패러다임이 되었습니다. 허나 기존의 프로그래밍 패러다임(예: 절차적 프로그래밍)에 비해 ‘인간이 생각하는 방식’, 다른 말로 하면 ‘인간다움’이란 정의는 매우 주관적일 수밖에 없습니다. 각 개인이 속한 환경과 시대에 따라 세상을 보는 눈이 달라지니까요.</p>
<p>이 때문에 특정 OO 언어의 사용법만 익히는 것은 반쪽짜리 OOP 공부입니다. 특정 언어의 사용법은 객관적인 측면일 뿐이니까요. 이 외에 사람의 관점에서 바라본 실세계를 컴퓨터 프로그램의 개체로 모델링할 수 있는 능력(주관적인 측면)을 같이 키워나가야만 제대로 OOP를 배우는 겁니다. 후자는 개체지향 분석 및 설계(OOAD, Object-Oriented Analysis and Design)의 영역으로 본 과목은 OOP와 OOAD(이후 합쳐서 OO라고 표현)를 동시에 가르칩니다.</p>
<p>상술한 주관성 때문에 OO 분야에는 다양한 의견과 주장이 존재해왔습니다. 그리고 어느 시대와 진영의 자료로 공부했느냐에 따라 각 프로그래머가 OO(OOP와 OOAD를 모두 포함)를 이해하는 방식이 많이 다릅니다. 객관성을 추구하는 컴퓨터 과학/공학이라는 학문에 이런 광범위한 주관성은 많은 혼란을 야기합니다. 더 나아가 다른 주장이 나온 이유를 이해하려는 노력 없이 자신이 무비판적으로 수용하며 배운 내용에 기초하여 다른 진영이 무조건 틀렸다고 공격하는 모습들도 OO 분야에서는 종종 발견되는 건설적이지 못한 모습입니다.</p>
<p>이런 문제들을 해결하기 위해 본 과목은 현재 실무에서 다수설로 받아들이는 OO의 정의와 모델링/프로그래밍 기법을 배우는 외에도 이런 다양한 주장들이 나오게 된 배경과 각 주장의 장단점, 그리고 그들 사이에서 어떻게 밸런스를 잡아야 훌륭한 프로그래머가 될 수 있는지에 대한 가이드도 제공합니다.</p>
<h3>4. <a href="https://pocu.academy/ko/Courses/COMP3200">COMP3200: C++ 언매니지드 프로그래밍</a> (평점 4.7/5.0)</h3>
<p>학생분들부터 현업에 계신 분들에 이르기까지 많은 분들에게 사랑받고 있는 스테디 + 베스트셀러 과목입니다. 모 회사에서 단체로 수강을 하기도 하셨습니다.</p>
<p>C++을 제대로 마스터하려면 ‘무엇을 사용해야 하는지’ 보다는 ‘무엇을 사용하면 안 되는지’를 알아야 합니다. 매우 방대하고 통일적이지 못한 표준과 긴 역사를 가진 언어이기 때문입니다. 프로그래밍 언어 설계 측면에서는 여러 문제가 있는 언어이지만 C가 가지는 언매니지드 언어의 장점과 개체 지향 프로그래밍(OOP)의 장점을 모두 갖춘 언어 중 널리 쓰이는 거의 유일한 언어입니다.</p>
<p>POCU 아카데미에서는 업계에서 쓰이는 C++을 엄선해서 가르칩니다. 그리고 자칫 책으로만 배울 경우 실수하기 쉬운 부분, 그리고 언매니지드 언어의 특성상 실수를 하면 매우 큰 문제가 생길 수 있는 부분들을 확실히 알려드려 성능이 너무 좋아 위험하기까지 한(2 Fast 2 Furious ^^) C++이란 언어를 마스터할 수 있게 도와드립니다.</p>
<h3>5. <a href="https://pocu.academy/ko/Courses/COMP3500">COMP3500: 알고리듬 및 자료구조 (Java)</a> (평점 4.9/5.0)</h3>
<p>프로그래머의 업무를 간단히 표현하면 ‘문제를 해결하는 것’입니다. 그렇기에 ‘문제를 해결하는 확실한 방법’인 알고리듬(algorithm)은 프로그래머의 필수 지식으로 종종 거론되곤 합니다.</p>
<p>모든 문제 해결에 토대가 되는 핵심 알고리듬. 그것이 바로 이 강좌에서 가르치는 내용입니다. POCU 아카데미가 지향하는 10년 후에도 살아남는 탑 1% 개발자. 그런 사람이 되려면 수박 겉핥기 식이 아닌 핵심 알고리듬의 동작 원리까지 확실히 알아야겠죠? 이 강좌에서 확실히 이해시켜드립니다. 이 강좌를 들으신 후 알고리듬 문제 사이트에 가서 본인의 실력을 테스트해보세요. 처음 보는 문제인데도 어렵지 않게 해법을 찾아내는 한 단계 업그레이드된 본인의 문제 해결 능력을 느끼실 수 있을 겁니다. 앞으로 실무에서 마주치게 될 새로운 문제들도 큰 어려움이 없겠죠?</p>
<h2>B. 각 과목에 공통되는 사항 및 수강신청 안내</h2>
<p>이번에 개강하는 과목 모두에게 적용되는 내용을 안내해 드리겠습니다.</p>
<h3>1. 동영상 강좌만 듣기 vs POCU 아카데미 정식 수강</h3>
<p>동영상 강좌는 그냥 동영상만을 보시는 과정으로 타 온라인 학원들의 인강과 다르지 않습니다. 동영상 중간마다 간단한 퀴즈는 있지만 이는 동영상 강의에 집중하실 수 있도록 도와드리는 개념입니다. 반면에 정규 학기 수강은 총 15주 동안 학기제로 운영되며, 매주 봐야 할 동영상 강의와, 매주 제출해야 하는 실습, 그리고 3주마다 제출해야 하는 과제가 있습니다. 이 외에 중간고사(8주 차)와 기말고사(15주 차)를 보시게 됩니다. POCU 아카데미에서 학기별로 수강하는 한 과목은 컴퓨터 공학과 대학에서 6학점짜리 과목에 준한다고 보시면 됩니다.</p>
<table>
<thead>
<tr>
<th align="center">동영상 강좌만 수강</th>
<th align="center">정규 학기 수강</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">언제든 구입 가능</td>
<td align="center">학기제</td>
</tr>
<tr>
<td align="center">동영상 강좌 제공(평생 소장)</td>
<td align="center">동영상 강좌 제공(평생 소장)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">과제 및 실습(실시간 채점)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">시험</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">토론</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">공식 POCU 성적표</td>
</tr>
</tbody>
</table>
<h3>2. 동영상 강좌만 보려는 분들</h3>
<p>동영상 강좌만 수강하시는 경우, POCU 아카데미 회원 가입을 하실 필요는 없습니다.</p>
<ul>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>가격 및 상세 내용은 POCU 아카데미의 <a href="https://pocu.academy/ko/Courses">과목 안내 페이지</a>를 참조해주세요.</p>
</li>
<li>
<p>수강신청 기간과 상관없이 언제라도 구매하셔서 들을 수 있습니다.</p>
</li>
<li>
<p>구매하신 동영상 강좌는 평생 보실 수 있으며 추후 업데이트도 무료로 받으시게 됩니다.</p>
</li>
</ul>
<h3>3. 실습, 과제, 시험을 포함한 정규 학기를 들으려는 분들</h3>
<p>정규학기의 경우 POCU 아카데미 회원 가입 및 본인 인증이 <strong>반드시</strong> 필요합니다. (영업일로부터 최대 2일이 소요될 수 있습니다. 서둘러 수강 신청해주세요.)</p>
<ul>
<li>
<p>수강신청 기간은 9월 4일 08시 59분까지 입니다.</p>
</li>
<li>
<p>반드시 POCU 아카데미 회원 가입 및 본인 인증을 완료하셔야 수강 신청이 가능합니다.</p>
</li>
<li>
<p>POCU 아카데미의 2023년 9월 학기는 9월 4일 09시에 시작하여 총 15주간 진행됩니다.</p>
</li>
<li>
<p>주 단위 일정은 POCU 아카데미 웹사이트에서 확인하실 수 있습니다. (약간의 변동은 있을 수 있음)</p>
</li>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>동영상 강좌의 길이는 과목당 총 30시간 정도입니다.</p>
</li>
<li>
<p>주당 강의 시간: 3~4시간</p>
</li>
<li>
<p>주당 실습 시간: 최소 2시간</p>
</li>
<li>
<p>주당 과제 시간: 평균 7시간</p>
</li>
</ul>
<h3>4. 할인 해택</h3>
<p>POCU 아카데미는 다양한 할인 정책을 제공하고 있습니다.</p>
<h4>청강대 재학생, BCIT 재학생</h4>
<p>매 학기 POCU 아카데미는 몇몇 대학교/학과의 재학생들 중 몇 분을 선발하여 특별 할인 혜택을 제공해 드리고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2019/08/24/special-discount-for-ckgame-students.html">청강대 게임학과 할인 안내</a></li>
<li><a href="/ko/2019/12/11/special-discount-for-bcit-cst-students.html">BCIT CST 학과 할인 안내</a></li>
</ul>
<h4>군인 및 42서울 교육생</h4>
<p>다음 그룹에 속하신 분들에게 상시 할인을 제공하고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2022/11/27/military-discount.html">군인 할인 안내</a></li>
<li><a href="/ko/2020/12/25/42seoul-discount.html">42 SEOUL 할인 안내</a></li>
</ul>
<h3>5. 강의 시간 전에 준비할 것들</h3>
<p>8주 차의 중간고사와 15주 차의 기말고사를 볼 때 <strong>반드시</strong> 필요합니다.</p>
<ul>
<li>웹캠</li>
<li>마이크</li>
</ul>
<p>다시 한번 많은 관심 가져주셔서 감사드리며, 9월 학기에서 직접 뵐 수 있기를 바랍니다.</p>
<p>POCU 아카데미의 김포프 드림</p>]]></content><author><name>김포프</name></author><category term="news" /><category term="news" /><summary type="html"><![CDATA[안녕하세요, POCU 아카데미 대표 강사 김포프입니다. POCU 아카데미가 2023년 9월 정규 학기 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 5개 과목으로, 아래 과목 소개란에서 확인하실 수 있습니다. 특히 저번 학기에 첫 개강한 COMP 2300: 어셈블리 프로그래밍을 할인가에 들으실 수 있는 마지막 기회이니 이번 기회를 놓치지 마세요.]]></summary></entry><entry><title type="html">가이드: Mac에서 ‘화면 공유에 동의해야 합니다’ 메시지가 계속 나올 때 해결법</title><link href="https://blog.pocu.academy/ko/2023/08/11/how-to-enable-screen-recording-on-mac.html" rel="alternate" type="text/html" title="가이드: Mac에서 ‘화면 공유에 동의해야 합니다’ 메시지가 계속 나올 때 해결법" /><published>2023-08-11T00:00:00+00:00</published><updated>2023-08-11T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/08/11/how-to-enable-screen-recording-on-mac</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/08/11/how-to-enable-screen-recording-on-mac.html"><![CDATA[<p>안녕하세요, POCU 아카데미 수강생 여러분!</p>
<p>저희 POCU의 정규코스는 학습의 극대화를 위해 시험(중간/기말고사) 결과를 학생평가에 반영하고 있습니다. 그리고 학생분들이 오롯이 자신의 실력으로 시험을 보실 수 있도록 <a href="https://chrome.google.com/webstore/detail/pocu-proctor/igcpjndghfaebohjdanobonebnejppej">‘POCU Proctor’라는 시험 감독 프로그램</a>을 사용하는데요. 크롬(Chrome) 브라우저에서 도는 이 프로그램은 화면 녹화(screen recording) 권한이 있어야 제대로 동작한답니다.</p>
<p>윈도 운영체제(POCU 정규코스의 권장 운영체제)에서는 별도의 설정 없이 이 프로그램을 사용할 수 있지만, 맥(Mac)에서는 권한 설정을 따로 해줘야 하고, 그 권한 이름도 ‘화면 녹화’가 아닌 ’화면 기록`이라고 한다네요!</p>
<p>따라서 이 글에서는 맥에서 ‘화면 기록’ 권한을 세팅하는 법에 대해 알려드리겠습니다. 아차차! 이 권한 설정은 크롬 브라우저에 해주는 거예요! :D</p>
<!--more-->
<h2>단계별 가이드</h2>
<p>다음은 맥에서 크롬 브라우저가 ‘화면 기록’ 기능을 사용할 수 있도록 권한을 설정하는 방법입니다. (Ventura 13 기준)</p>
<ol>
<li>
<p>왼쪽 상단 애플 메뉴 🍎 &gt; <code>시스템 설정</code>(<code>System Settings</code>)을 클릭합니다.</p>
<p><img src="/ko/assets/img/20230811/mac-setting-1.png" alt="상단 메뉴" /></p>
</li>
<li>
<p>왼편 사이드바(sidebar)에서 <code>개인 정보 및 보안</code>(<code>Privacy &amp; Security</code>)을 클릭합니다. (사이드바를 아래로 스크롤해야 할 수도 있습니다.)</p>
<p><img src="/ko/assets/img/20230811/mac-setting-2.png" alt="사이드바 메뉴" /></p>
</li>
<li>
<p><code>화면 기록</code>(<code>Screen Recording</code>)을 클릭합니다. (화면을 아래로 스크롤해야 할 수도 있습니다.)</p>
<p><img src="/ko/assets/img/20230811/mac-setting-3.png" alt="화면 기록 선택" /></p>
</li>
<li>
<p>이 목록에서 각 앱의 <code>화면 기록</code> 권한을 켜거나 끌 수 있습니다. Google Chrome의 권한을 켜 주세요.</p>
<p><img src="/ko/assets/img/20230811/mac-setting-4.png" alt="크롬에 권한 설정" /></p>
</li>
</ol>
<p>다른 운영체제 버젼을 사용하시는 분들은 <a href="https://support.apple.com/ko-kr/guide/mac-help/mchld6aa7d23/mac">애플의 공식 문서</a>를 참고해 주세요.</p>
<p>그럼 오늘도 즐거운 POCU 되세요 :D</p>]]></content><author><name>윤아</name></author><category term="guide" /><category term="mac" /><category term="proctor" /><summary type="html"><![CDATA[안녕하세요, POCU 아카데미 수강생 여러분! 저희 POCU의 정규코스는 학습의 극대화를 위해 시험(중간/기말고사) 결과를 학생평가에 반영하고 있습니다. 그리고 학생분들이 오롯이 자신의 실력으로 시험을 보실 수 있도록 ‘POCU Proctor’라는 시험 감독 프로그램을 사용하는데요. 크롬(Chrome) 브라우저에서 도는 이 프로그램은 화면 녹화(screen recording) 권한이 있어야 제대로 동작한답니다. 윈도 운영체제(POCU 정규코스의 권장 운영체제)에서는 별도의 설정 없이 이 프로그램을 사용할 수 있지만, 맥(Mac)에서는 권한 설정을 따로 해줘야 하고, 그 권한 이름도 ‘화면 녹화’가 아닌 ’화면 기록`이라고 한다네요! 따라서 이 글에서는 맥에서 ‘화면 기록’ 권한을 세팅하는 법에 대해 알려드리겠습니다. 아차차! 이 권한 설정은 크롬 브라우저에 해주는 거예요! :D]]></summary></entry><entry><title type="html">2023년 5월 학기 수강 안내</title><link href="https://blog.pocu.academy/ko/2023/04/17/about-may-2023-term.html" rel="alternate" type="text/html" title="2023년 5월 학기 수강 안내" /><published>2023-04-17T00:00:00+00:00</published><updated>2023-04-17T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/04/17/about-may-2023-term</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/04/17/about-may-2023-term.html"><![CDATA[<p>안녕하세요, POCU 아카데미 대표 강사 김포프입니다.</p>
<p>POCU 아카데미가 <strong>2023년 5월 정규 학기</strong> 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 6개 과목으로, <a href="https://pocu.academy/ko/Courses/COMP3500">COMP3500: 알고리듬 및 자료구조 (Java)</a>를 제외한 모든 과목을 수강하실 수 있습니다. <strong>특히 많은 분들이 오랫동안 기다리신 <a href="https://pocu.academy/ko/Courses/COMP2300">COMP 2300: 어셈블리 프로그래밍</a>이 드디어 첫 선을 보입니다.</strong></p>
<!--more-->
<h2>A. 과목 소개</h2>
<p>그러면 각 과목에 대해 간단히 설명부터 드리겠습니다. 아래의 순서는 <a href="https://trello.com/c/7TlAQwWQ">저희가 추천하는 수강 순서</a>를 따릅니다.</p>
<h3>1. <a href="https://pocu.academy/ko/Courses/COMP1500">COMP1500: 실무 프로그래밍 입문 (C#)</a> (평점 4.5/5.0)</h3>
<p>POCU 아카데미를 처음 시작하시는 분들이 제일 먼저 들으시는 과목입니다. 타 기관의 입문 강좌와는 달리 한 가지 프로그래밍 언어를 사용하는 법이 아니라 프로그래밍 언어에 상관없이 일류 프로그래머가 되려면 배워야 하는 프로그래밍의 기본을 가르칩니다.</p>
<p>단, 이 과목은 <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B6832340619">‘Hello Coding 프로그래밍’</a> 책을 정독하신 분들을 대상으로 합니다. 프로그래밍 입문(첫걸음) 과목과 대학교 수준의 기초 프로그래밍 과목은 배우는 방법이 완벽히 다릅니다. 전자는 프로그래밍을 전혀 모르는 상황에서 대충 맛만 보려는 분들도 들을 수 있는 과목입니다. 따라서 누군가의 코드를 따라 치면서 스트레스 없이 즐겁게 배울 수 있는 과목입니다. 하지만 후자는 이미 프로그래밍을 업으로 삼겠다고 마음먹으신 분들을 대상으로 하는지라 컴퓨터가 작동하는 원리부터 프로로 살아남기 위해 가져야 하는 자세와 습관 등을 기초부터 매우 찬찬히(그리고 지루하게) 배워나갈 수밖에 없습니다.</p>
<p>취미로 운동을 하시는 분들은 원할 때 아무 때나 나가서 운동을 즐긴다면 프로로 운동을 하시는 분들은 시즌이 열리기 한참 전부터 스프링 캠프에서 지루한 기초체력훈련을 차근차근하는 것과 마찬가지지요. 그것도 수십 년에 걸쳐서요. POCU 아카데미에서 제공하는 COMP1500 과목이 바로 그런 프로를 위한 기초체력 훈련 과정입니다. ‘Hello Coding’ 책을 통해 프로그래머를 업으로 삼겠다고 마음먹으신 분들에게 제대로 된 기본기를 가지게 해 드리겠습니다.</p>
<h3>2. <a href="https://pocu.academy/ko/Courses/COMP1000">COMP1000: 소프트웨어 공학용 수학</a> (평점 4.8/5.0)</h3>
<p>순수 수학에서 흔히 볼 수 있는 이론과 증명은 현실 세계를 이해하려는 지난 수백 년 동안의 노력의 결과물입니다. 하지만 컴퓨터의 발전과 함께 이제는 디지털 세계가 현실 세계의 일부가 되었습니다. 이런 디지털 세계를 구축하고 그 속의 문제들을 해결하는 소프트웨어 공학자에게 이론 중심의 전통적인 수학은 다소 모자란 부분이 있습니다. 고로, 본 강좌는 이론/증명 위주가 아닌 실용성 위주의 수학 및 컴퓨터를 이해하는데 중요한 수학에 중점을 두어 진행합니다.</p>
<p>이 과목은 학생분들의 만족도가 매우 높은 과목입니다. 내용의 구성이나 평가 방법 등이 정말 프로그래머를 위한 제대로 된 첫 수학 과목이라는 평을 받기에 충분하다고 말씀들 하십니다.</p>
<p>이 수업을 성공적으로 마치시면 머리로만 어렴풋이 이해하고 있던 수학의 내용들을 프로그래밍으로 확실히 옮기실 수 있을 것이라고 보장합니다.</p>
<h3>3. <a href="https://pocu.academy/ko/Courses/COMP2200">COMP2200: C 언매니지드 프로그래밍</a> (평점 4.6/5.0)</h3>
<p>프로그래머의 지속적인 성장에 반드시 필요한 지식 중 하나가 바로 컴퓨터 하드웨어에 대한 이해입니다. 속된 말로 ‘컴퓨터와 결혼한다’라고까지 합니다. 자신이 모는 자동차를 잘 이해하지 못하면 뛰어난 레이서가 될 수 없듯이 자신이 만든 프로그램이 실행될 하드웨어를 이해하지 못하는 프로그래머 역시 한계가 있을 수밖에 없습니다.</p>
<p>C는 하드웨어와 매우 가까운 언어이면서도 대부분의 매니지드 언어와 달리 언매니지드 언어 특유의 기능(예: 메모리 관리)들을 프로그래머가 사용하도록 강제하기 때문에, 하드웨어의 동작 원리를 공부하고 싶은 분들, 혹은 컴퓨터를 더 잘 이해하고 싶은 분들에게 매우 훌륭한 입문용 언매니지드 언어라고 할 수 있겠습니다.</p>
<p>C를 배우셨는데 내가 작성한 코드가 어떻게 어셈블리어로 바뀌는지 혹은 어느 메모리에서 어떻게 실행되는지 모르신다면 그건 그냥 사용 가능한 프로그래밍 언어 중 하나로 C를 배우신 것입니다. POCU 아카데미에서는 C를 통해 하드웨어를 이해할 수 있는 눈을 뜨게 해 드립니다.</p>
<h3>4. (<strong>신규 과목, 30% 할인</strong>) <a href="https://pocu.academy/ko/Courses/COMP2300">COMP2300: 어셈블리 프로그래밍</a></h3>
<p>Great 프로그래머의 필수템, 어셈블리어를 마스터하세요. 이 강좌는 다양한 환경에서 어셈블리어를 자유롭게 구사할 수 있는 능력을 길러줍니다. 심지어 컴퓨터를 직접 제작하는 경험까지 포함되어 있죠! POCU 아카데미의 독창적이고 철저한 커리큘럼을 통해 하드웨어의 본질을 깊이 이해하고, 기초 컴퓨터 구조와 운영체제의 세계를 완벽하게 습득하세요!</p>
<h3>5. <a href="https://pocu.academy/ko/Courses/COMP2500">COMP2500: 개체지향 프로그래밍 및 설계 (Java)</a> (평점 4.9/5.0)</h3>
<p>’인간이 생각하는 방식으로 프로그래밍 하자!’라는 야심찬 목표를 가지고 시작한 개체지향 프로그래밍(OOP, Object-Oriented Programming)은 이제 주류 프로그래밍 패러다임이 되었습니다. 허나 기존의 프로그래밍 패러다임(예: 절차적 프로그래밍)에 비해 ‘인간이 생각하는 방식’, 다른 말로 하면 ‘인간다움’이란 정의는 매우 주관적일 수밖에 없습니다. 각 개인이 속한 환경과 시대에 따라 세상을 보는 눈이 달라지니까요.</p>
<p>이 때문에 특정 OO 언어의 사용법만 익히는 것은 반쪽짜리 OOP 공부입니다. 특정 언어의 사용법은 객관적인 측면일 뿐이니까요. 이 외에 사람의 관점에서 바라본 실세계를 컴퓨터 프로그램의 개체로 모델링할 수 있는 능력(주관적인 측면)을 같이 키워나가야만 제대로 OOP를 배우는 겁니다. 후자는 개체지향 분석 및 설계(OOAD, Object-Oriented Analysis and Design)의 영역으로 본 과목은 OOP와 OOAD(이후 합쳐서 OO라고 표현)를 동시에 가르칩니다.</p>
<p>상술한 주관성 때문에 OO 분야에는 다양한 의견과 주장이 존재해왔습니다. 그리고 어느 시대와 진영의 자료로 공부했느냐에 따라 각 프로그래머가 OO(OOP와 OOAD를 모두 포함)를 이해하는 방식이 많이 다릅니다. 객관성을 추구하는 컴퓨터 과학/공학이라는 학문에 이런 광범위한 주관성은 많은 혼란을 야기합니다. 더 나아가 다른 주장이 나온 이유를 이해하려는 노력 없이 자신이 무비판적으로 수용하며 배운 내용에 기초하여 다른 진영이 무조건 틀렸다고 공격하는 모습들도 OO 분야에서는 종종 발견되는 건설적이지 못한 모습입니다.</p>
<p>이런 문제들을 해결하기 위해 본 과목은 현재 실무에서 다수설로 받아들이는 OO의 정의와 모델링/프로그래밍 기법을 배우는 외에도 이런 다양한 주장들이 나오게 된 배경과 각 주장의 장단점, 그리고 그들 사이에서 어떻게 밸런스를 잡아야 훌륭한 프로그래머가 될 수 있는지에 대한 가이드도 제공합니다.</p>
<h3>6. <a href="https://pocu.academy/ko/Courses/COMP3200">COMP3200: C++ 언매니지드 프로그래밍</a> (평점 4.7/5.0)</h3>
<p>학생분들부터 현업에 계신 분들에 이르기까지 많은 분들에게 사랑받고 있는 스테디 + 베스트셀러 과목입니다. 모 회사에서 단체로 수강을 하기도 하셨습니다.</p>
<p>C++을 제대로 마스터하려면 ‘무엇을 사용해야 하는지’ 보다는 ‘무엇을 사용하면 안 되는지’를 알아야 합니다. 매우 방대하고 통일적이지 못한 표준과 긴 역사를 가진 언어이기 때문입니다. 프로그래밍 언어 설계 측면에서는 여러 문제가 있는 언어이지만 C가 가지는 언매니지드 언어의 장점과 개체 지향 프로그래밍(OOP)의 장점을 모두 갖춘 언어 중 널리 쓰이는 거의 유일한 언어입니다.</p>
<p>POCU 아카데미에서는 업계에서 쓰이는 C++을 엄선해서 가르칩니다. 그리고 자칫 책으로만 배울 경우 실수하기 쉬운 부분, 그리고 언매니지드 언어의 특성상 실수를 하면 매우 큰 문제가 생길 수 있는 부분들을 확실히 알려드려 성능이 너무 좋아 위험하기까지 한(2 Fast 2 Furious ^^) C++이란 언어를 마스터할 수 있게 도와드립니다.</p>
<h2>B. 각 과목에 공통되는 사항 및 수강신청 안내</h2>
<p>이번에 개강하는 과목 모두에게 적용되는 내용을 안내해 드리겠습니다.</p>
<h3>1. 동영상 강좌만 듣기 vs POCU 아카데미 정식 수강</h3>
<p>동영상 강좌는 그냥 동영상만을 보시는 과정으로 타 온라인 학원들의 인강과 다르지 않습니다. 동영상 중간마다 간단한 퀴즈는 있지만 이는 동영상 강의에 집중하실 수 있도록 도와드리는 개념입니다. 반면에 정규 학기 수강은 총 15주 동안 학기제로 운영되며, 매주 봐야 할 동영상 강의와, 매주 제출해야 하는 실습, 그리고 3주마다 제출해야 하는 과제가 있습니다. 이 외에 중간고사(8주 차)와 기말고사(15주 차)를 보시게 됩니다. POCU 아카데미에서 학기별로 수강하는 한 과목은 컴퓨터 공학과 대학에서 6학점짜리 과목에 준한다고 보시면 됩니다.</p>
<table>
<thead>
<tr>
<th align="center">동영상 강좌만 수강</th>
<th align="center">정규 학기 수강</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">언제든 구입 가능</td>
<td align="center">학기제</td>
</tr>
<tr>
<td align="center">동영상 강좌 제공(평생 소장)</td>
<td align="center">동영상 강좌 제공(평생 소장)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">과제 및 실습(실시간 채점)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">시험</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">토론</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">공식 POCU 성적표</td>
</tr>
</tbody>
</table>
<h3>2. 동영상 강좌만 보려는 분들</h3>
<p>동영상 강좌만 수강하시는 경우, POCU 아카데미 회원 가입을 하실 필요는 없습니다.</p>
<ul>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>가격 및 상세 내용은 POCU 아카데미의 <a href="https://pocu.academy/ko/Courses">과목 안내 페이지</a>를 참조해주세요.</p>
</li>
<li>
<p>수강신청 기간과 상관없이 언제라도 구매하셔서 들을 수 있습니다.</p>
</li>
<li>
<p>구매하신 동영상 강좌는 평생 보실 수 있으며 추후 업데이트도 무료로 받으시게 됩니다.</p>
</li>
</ul>
<h3>3. 실습, 과제, 시험을 포함한 정규 학기를 들으려는 분들</h3>
<p>정규학기의 경우 POCU 아카데미 회원 가입 및 본인 인증이 <strong>반드시</strong> 필요합니다. (영업일로부터 최대 2일이 소요될 수 있습니다. 서둘러 수강 신청해주세요.)</p>
<ul>
<li>
<p>수강신청 기간은 5월 1일 08시 59분까지 입니다.</p>
</li>
<li>
<p>반드시 POCU 아카데미 회원 가입 및 본인 인증을 완료하셔야 수강 신청이 가능합니다.</p>
</li>
<li>
<p>POCU 아카데미의 2023년 5월 학기는 5월 1일 09시에 시작하여 총 15주간 진행됩니다.</p>
</li>
<li>
<p>주 단위 일정은 POCU 아카데미 웹사이트에서 확인하실 수 있습니다. (약간의 변동은 있을 수 있음)</p>
</li>
<li>
<p>동영상 강좌는 <a href="https://pocu-ko.teachable.com/courses">Teachable</a>과 <a href="https://www.udemy.com/courses/search/?q=Pope+Kim">Udemy</a>를 통해 제공하며 티처블 혹은 유데미 회원 가입이 필요합니다.</p>
</li>
<li>
<p>동영상 강좌의 길이는 과목당 총 30시간 정도입니다.</p>
</li>
<li>
<p>주당 강의 시간: 3~4시간</p>
</li>
<li>
<p>주당 실습 시간: 최소 2시간</p>
</li>
<li>
<p>주당 과제 시간: 평균 7시간</p>
</li>
</ul>
<h3>4. 할인 해택</h3>
<p>POCU 아카데미는 다양한 할인 정책을 제공하고 있습니다.</p>
<h4>청강대 재학생, BCIT 재학생</h4>
<p>매 학기 POCU 아카데미는 몇몇 대학교/학과의 재학생들 중 몇 분을 선발하여 특별 할인 혜택을 제공해 드리고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2019/08/24/special-discount-for-ckgame-students.html">청강대 게임학과 할인 안내</a></li>
<li><a href="/ko/2019/12/11/special-discount-for-bcit-cst-students.html">BCIT CST 학과 할인 안내</a></li>
</ul>
<h4>군인 및 42서울 교육생</h4>
<p>다음 그룹에 속하신 분들에게 상시 할인을 제공하고 있습니다. 자세한 내용은 아래의 링크에 걸린 관련 글들을 참고해주세요.</p>
<ul>
<li><a href="/ko/2022/11/27/military-discount.html">군인 할인 안내</a></li>
<li><a href="/ko/2020/12/25/42seoul-discount.html">42 SEOUL 할인 안내</a></li>
</ul>
<h3>5. 강의 시간 전에 준비할 것들</h3>
<p>8주 차의 중간고사와 15주 차의 기말고사를 볼 때 <strong>반드시</strong> 필요합니다.</p>
<ul>
<li>웹캠</li>
<li>마이크</li>
</ul>
<p>다시 한번 많은 관심 가져주셔서 감사드리며, 5월 학기에서 직접 뵐 수 있기를 바랍니다.</p>
<p>POCU 아카데미의 김포프 드림</p>]]></content><author><name>김포프</name></author><category term="news" /><category term="news" /><summary type="html"><![CDATA[안녕하세요, POCU 아카데미 대표 강사 김포프입니다. POCU 아카데미가 2023년 5월 정규 학기 수강신청을 받습니다. 이번 학기에 수강이 가능한 과목은 총 6개 과목으로, COMP3500: 알고리듬 및 자료구조 (Java)를 제외한 모든 과목을 수강하실 수 있습니다. 특히 많은 분들이 오랫동안 기다리신 COMP 2300: 어셈블리 프로그래밍이 드디어 첫 선을 보입니다.]]></summary></entry><entry><title type="html">성공 스토리 9: 대학을 졸업하자마자 화제의 게임 회사! 펄어비스에 취업하신 게임 엔진 프로그래머 알레그루즈님</title><link href="https://blog.pocu.academy/ko/2023/02/14/success-story-of-a-fresh-graduate-who-got-a-job-from-pearl-abyss.html" rel="alternate" type="text/html" title="성공 스토리 9: 대학을 졸업하자마자 화제의 게임 회사! 펄어비스에 취업하신 게임 엔진 프로그래머 알레그루즈님" /><published>2023-02-14T00:00:00+00:00</published><updated>2023-02-14T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2023/02/14/success-story-of-a-fresh-graduate-who-got-a-job-from-pearl-abyss</id><content type="html" xml:base="https://blog.pocu.academy/ko/2023/02/14/success-story-of-a-fresh-graduate-who-got-a-job-from-pearl-abyss.html"><![CDATA[<p>POCU 아카데미 수강생 여러분 반갑습니다! 윤아입니다!</p>
<p>이번 성공 스토리는 게임 엔진 프로그래머 알레그루즈님의 이야기입니다. POCU 학생 여러분들의 실력이 다들 얼마나 뛰어나신지 대학 졸업을 하자마자 참지 못하시고 취업을 뿌셔버리시네요! 역시 포큐의 자랑이십니다. #포큐만세 게다가 유명 게임 검은 사막, 그리고 도깨비의 개발로 화제가 된 게임회사 펄어비스에 취업을 하셨으니.. 긴 말없이 곧바로 알레그루즈님의 이야기를 들어보시죠!</p>
<p><img src="/ko/assets/img/20230214/pearl-abbyss-logo.png" alt="Pearl Abbyss Logo" /></p>
<!--more-->
<h4>안녕하세요. 오늘의 인터뷰어 윤아입니다! 간단한 자기소개부터 부탁드리겠습니다</h4>
<p>안녕하세요. 저는 올해 2022년을 끝으로 소프트웨어 전공으로 대학교를 졸업하고 내년 2023년부터 펄어비스 게임 엔진 프로그래머로서 근무하게 될 “알레그루즈”라고 합니다.</p>
<h4>대단하십니다. 축하드려요! 그렇다면 지금은 어떤  일을 하고 계신건가요</h4>
<p>음.. 죄..죄송합..합니다만, 아직은 입사일이 아니라서 본격적으로 일을 시작하지는 않아서 말씀드리기는 어렵습니다. 그래도, 대략적으로는 펄어비스 자체 개발 엔진 중에서 차기작의 기반이 될 Black Space 엔진 개발에 주니어 개발자로 참여할 예정입니다.</p>
<h4>프로그래밍에 관심을 가지게 된 계기가 있나요? 그리고 어떻게 프로그래밍에 입문하셨나요</h4>
<p>예전부터 뭔가를 만드는 것을 좋아했었습니다. 음악 만드는 것도 좋아했고, 소설 쓰는 것도 좋아했고요. 최근에는 영상을 찍는 것도 재미있고, 심지어 건축에도 흥미가 생기고 있을 정도입니다. 이러한 다양한 요소들을 전부 적용할 수 있는 게 게임인데다가 재미까지 추구할 수 있다 보니, 자연스럽게 예전부터 게임에 흥미를 가졌던 것 같아요.</p>
<p>사실 프로그래밍을 어렸을 때부터 하진 않았어요. 초등학생 땐 주로 메이플스토리의 게임 데이터를 참고해서 공책에 RPG 게임을 만들거나, 스타크래프트 맵 에디터로 게임을 만들곤 했죠. 중학생 때는 게임 음악을 만드는 쪽을 하면서 가끔 게임메이커라는 툴로 게임을 만들었어요. 이때도 게임메이커의 스크립트는 저한테 너무 어려워서 그냥 스크래치처럼 비주얼 스크립트 기능으로 게임을 만들었어요. 고등학교 땐.. 아무래도 학업 때문에 게임에 관해선, 게임에 대한 소논문을 쓴 게 전부입니다.</p>
<p><a href="https://youtu.be/UProw1LhcgY?t=60">약빨고 만든 게임: 대도서관 실황 - 우리 야옹이에겐 장애가 있어요!</a><br />
<em>나름의 게임 업계 데뷔작 “우리 야옹이에겐 장애가 있어요!”</em></p>
<p>다만 중학생 때 기억을 더듬어보자면.. 인터넷상에서 여러 사람들과 협업을 해보면서 게임 개발을 해봤었는데, 프로그래머들이 너무나 부러웠었어요! 그래서 자연스럽게 고등학생 때 게임 개발을 하기 위해 컴퓨터 공학 전공의 꿈으로 다가가게 되었습니다. 그 덕에 저는 소프트웨어 전공으로 대학에 입학하게 되었고, 처음으로 Python이라는 언어로 프로그래밍에 입문했었습니다.</p>
<h4>오.. 은근히 체계적인 거 같습니다. 그렇다면 POCU 아카데미에 대해서는 어떻게 알게 되셨나요</h4>
<p>고등학생 때부터 유튜브에 김포프님의 영상을 보게 되었습니다. 자연스럽게 포프님의 소식을 팔로우 할 수 있었습니다. 그러고 나서 소프트웨어 전공으로 대학에 입학한 후에는, ‘저런 괴수가 우리 학교 교수라면 얼마나 좋을까?’ 까지도 생각해 본 적이 있습니다ㅋㅋㅋㅋ. 그러다 나중에 군대에 있는 동안 포프님이 POCU 아카데미라는 것을 시작한다는 소식도 유튜브를 통해 알게 되었습니다.</p>
<h4>POCU 덕력이 상당하십니다. POCU 아카데미에서 어떤 과목(들)을 들으셨나요</h4>
<p>C++ 언매니지드 프로그래밍, 개체지향 프로그래밍 및 설계, 알고리듬 및 자료구조를 들었습니다.</p>
<h4>과목을 듣기 전에 기대했던 점이 있을까요? 실제로 그 강의가 기대에는 부합했나요</h4>
<p>사실 기대한 것은 없었습니다. 멋쩍지만, 기대라는 것은 어떤 것을 나에게 줄 것이라는 예상 같은 거잖아요? 저는 이 강의들이 저에게 어떤 것을 줄 것이라는 생각보다는, 마치 제 몸을 맡기고 어디로 저를 데려갈지 기대하는 롤러 코스터를 탄다는 마음으로 수강을 했습니다. 그래서 기대라는 어떠한 상한선을 긋기보다는, ‘과연 나를 어디까지 올려다 놓을 수 있을까?’ 라는 생각으로 수강을 했었던 것 같아요. 실제로 수강한 강의들 모두 그런 느낌을 받았습니다. 특히 처음으로 제가 들었던 C++ 강의는 그런 느낌이 정말 강했습니다.</p>
<h4>와.. 멋있는 생각입니다.. 그럼에도 혹시 수강하신 과목들에 대해 아쉬웠거나, 어려웠던 것이 있을까요</h4>
<p>음.. 그래도 역시 세 과목 전부 어렵긴 어려웠어요..ㅜㅠ 아쉬운 점은.. 이런 말 해도 되는지 모르겠지만, 역시 학생 입장에선 살인적인 가격 정도..?가 있을 것 같습니다. 아! 학생처럼 디버깅이나 테스트 같은 부분에서 약간의 가이드라인이나 꿀팁, 혹은 기초적이더라도 구체적인 예시라도 있으면 더 좋을 듯한 느낌입니다.
말하다 보니 자꾸 생각나게 되는데, 다른 아쉬운 점은 이제 제가 회사로 떠나서 강의 들을 여유가 있을까 걱정이 되는 와중인데, 그전에 어셈블리 같은 다른 과목이 지연됐다는 점? (농담 반 진담 반입니다 ㅋㅋㅋㅋ)</p>
<h4>흠흠.. 그.. 참고하겠습니다.. 그렇다면 POCU 아카데미를 수강하고 난 뒤 어떤 변화가 있었나요? 취업이나 승진 같은 실질적인 변화도 좋고, 다른 학생들과 공유할 법한 마음가짐의 변화도 좋습니다</h4>
<p>사실 첫 수업인 C++ 언매니지드 프로그래밍을 들었을 땐 군인이었습니다. 이 수업을 다 듣고 나서는 전역을 하고 칼복학을 하였죠. 이때 학교 수업으로 자료구조 수업을 들었는데, POCU 아카데미를 통해 교육을 받았던 저에겐, 수업이 너무 쉬웠을 뿐만 아니라 실습 코드의 수준이 너무 낮다는 느낌까지 받았습니다. 너무 신기한 경험이었습니다.</p>
<p>그 후 저는 제 프로그래밍 실력이 어느 수준인지 궁금해져, 게임회사 인턴/신입 자리에 지원서를 넣었습니다. 아무래도 당시 칼복학을 했었고, 2학년 2학기여서 그랬는지 몰라도 인턴 쪽은 전부 떨어졌습니다. 그런데 오히려 신입으로 지원했던 넥슨 산하 모 스튜디오에서 합격 통지를 받고 과제를 받게 되었습니다. 당시 과제는 전부 제가 처음으로 해보는 것들이었고, 난이도도 매우 높았기에 전체 중 60%만 풀고 제출을 했었습니다. 당연히 통과는 못할 줄 알았습니다. 한데 웬걸, 과제에 통과했으니 면접을 보러 오라고 연락이 왔습니다. 당시 1차 면접은 기술 면접이 섞여 있어 문제를 풀어서 내야 했는데요, 그때까지도 붙을 거라는 생각이 없어 모르는 것이 있더라도 덤덤하게 풀었습니다. 다만, 아는 건 전부 POCU에서 배웠기에 풀어서 냈습니다. 물론 2차 면접으로 40대의 무섭게 생기신 실장님들의 면접도 이어졌습니다. 뭐.. 최종적으로 저는 아쉽게도 떨어졌습니다.</p>
<p>사실 저는 최종까지 갈 수 있다고 생각조차 하지 못했습니다. 하지만 C++ 언매니지드 프로그래밍 과목을 수강하여 얻은 프로그래밍 실력, 경험, 방법론 등을 통해 엄청나게 제가 레벨 업을 했다는 확신이 들었습니다. 저는 이때의 경험으로, ‘POCU 아카데미의 과목은 그냥 믿고 가면 되는구나!’ 라는 믿음이 생겼습니다. #포큐만세2</p>
<p>저는 POCU 아카데미를 통해 프로그래밍 실력과 더불어, 자신감을 배웠습니다. 나중에 4학년이 되어 진짜로 취업 대비를 할 때도, 따로 백준이나 프로그래머스를 준비하지 않았습니다. 이미 POCU 아카데미의 수업을 들었고, 학교에서 가르친 핵심 CS 지식도 잘 공부했으니, 이미 취업 대비를 했다는 자신감이 있었던 거죠.</p>
<p>실제로 저는 펄어비스라는 회사의 채용연계형 인턴에 게임 엔진 프로그래머로 합격하게 되었고, 인턴 기간을 시작으로, 정규직이라는 결과까지 이어지게 되었습니다. 백준 같은 사이트는 한 번도 안 했는데도 졸업 전에 정규직이 된 거죠!</p>
<h4>좋은 말씀 너무 감사드립니다! 미래의 POCU 아카데미 수강생, 포큐러들에게 하시고 싶은 조언이 있으실 거 같은데 한 말씀 부탁드립니다</h4>
<p>돈 얘기부터 바로 하겠습니다.<br />
Is it worth it?<br />
Yes. Without a doubt.<br />
동영상 강의만 듣는 게 손해라고 느껴질 정도로 비싸다 싶으실 수 있습니다. 그러나 그 가치를 한다고 저는 확신합니다. 다만, 작은 돈이 아닙니다. 그러한 만큼 가벼운 각오나 준비되지 않은 상태에서 듣는 것은 손해입니다.</p>
<h4>요즘 관심 있게 보고 계시는 기술 분야가 있으시면 POCU 수강생들과 공유를 부탁드립니다</h4>
<p>Real-Time Path Tracing 쪽에 ReSTIR 기술에서 시작한 시리즈들이 주요 관심사입니다.<br />
ReSTIR, ReSTIR GI, RTXDI, World-Space ReSTIR, Volumetric ReSTIR, GRIS (ReSTIR PT), Resampled DDGI 등등이 있습니다.</p>
<h4>추후 계획은 어떻게 되시나요? 게임 엔진 프로그래머로서의 목표나 이루고 싶으신 것이 있으실까요</h4>
<p>모교에서 수업 실습 자료로도 쓰고, 강의 자료로도 쓰고, 팀 프로젝트 툴로써도 쓸 수 있는 자체 제작 엔진을 개발하고 싶습니다. 모교 졸업생이자 게임 업계 현직자들이 개발하여 제공한다면, 모교에서 훨씬 훌륭한 개발자들이 많이 나오지 않을까 기대합니다.</p>
<h4>모교에 대한 마음이 대단하세요. 자! 이제 마지막으로 하시고 싶은 말씀을 자유롭게 해주세요</h4>
<p>POCU 아카데미의 첫 강의는 COMP0000 왕초보 프로그래밍 입문 강의입니다. 하지만 이것도 중요하지만, 저는 하나 다른 생각도 가지고 있습니다. 개발자가 되기 위한 첫걸음은 무조건 “영어”라고 생각합니다ㅋㅋㅋ 영어 공부도 게을리하지 마세요! 꼭 필요합니다.</p>]]></content><author><name>윤아</name></author><category term="news" /><category term="success-story" /><category term="interview" /><category term="news" /><summary type="html"><![CDATA[POCU 아카데미 수강생 여러분 반갑습니다! 윤아입니다! 이번 성공 스토리는 게임 엔진 프로그래머 알레그루즈님의 이야기입니다. POCU 학생 여러분들의 실력이 다들 얼마나 뛰어나신지 대학 졸업을 하자마자 참지 못하시고 취업을 뿌셔버리시네요! 역시 포큐의 자랑이십니다. #포큐만세 게다가 유명 게임 검은 사막, 그리고 도깨비의 개발로 화제가 된 게임회사 펄어비스에 취업을 하셨으니.. 긴 말없이 곧바로 알레그루즈님의 이야기를 들어보시죠!]]></summary></entry><entry><title type="html">성공 스토리 8: 대학생이 가장 가고 싶어 하는 직장 네카라쿠배당토직야! 졸업과 동시에 바로 토스에 취업해버린 YSK님</title><link href="https://blog.pocu.academy/ko/2022/12/20/success-story-of-getting-a-dream-job-toss-before-graduation.html" rel="alternate" type="text/html" title="성공 스토리 8: 대학생이 가장 가고 싶어 하는 직장 네카라쿠배당토직야! 졸업과 동시에 바로 토스에 취업해버린 YSK님" /><published>2022-12-20T00:00:00+00:00</published><updated>2022-12-20T00:00:00+00:00</updated><id>https://blog.pocu.academy/ko/2022/12/20/success-story-of-getting-a-dream-job-toss-before-graduation</id><content type="html" xml:base="https://blog.pocu.academy/ko/2022/12/20/success-story-of-getting-a-dream-job-toss-before-graduation.html"><![CDATA[<p>POCU 아카데미 수강생 여러분 반갑습니다! 윤아입니다!</p>
<p>이번 성공 스토리는 대학을 졸업하시자마자 대학생들이 선호하는 대표적인 유니콘 기업, 토스에 취업을 확정 지으신 YSK 님입니다. 저희 POCU 강의와 조교 활동까지 하시며 POCU 아카데미에 진심이신, 또 누구보다 프로그래밍에 진심이신 YSK님의 이야기를 들어보시죠!</p>
<p><img src="/ko/assets/img/20221220/Toss_Logo_Primary.png" alt="Toss Logo" /></p>
<!--more-->
<h4>Q. 안녕하세요. 오늘 인터뷰는 제가 맡았습니다! 자기소개 먼저 부탁드리겠습니다</h4>
<p>안녕하세요. 대학교 4학년에 재학 중인 26살 YSK입니다. 반갑습니다! 남은 학사 일정이 끝나면 바로 토스의 서버 개발자로 합류할 예정입니다. 파릇파릇한 2년 차 포프러입니다 :)</p>
<h4>Q. 현재는 대학생이신 거군요?! 그전에 하시던 일이나 관심 있던 분야가 있으신가요</h4>
<p>네. 현재로서는 일반 대학생입니다. 8개월 정도 스타트업에서 백엔드 개발자로 근무하다가 현재는 퇴사한 후 남은 학업 일정 마무리에 집중하고 있습니다.</p>
<h4>Q. 프로그래밍에 관심을 가지게 된 계기가 있나요? 그리고 어떻게 프로그래밍에 입문하셨나요</h4>
<p>프로그래밍은 학창 시절부터, 스타크래프트 2의 유즈맵 플레이를 즐겨하면서 관심을 가지게 되었습니다. 제가 플레이하던 유즈맵은 사용자의 로컬에 xml 파일을 생성하고, 해당 파일을 저장소의 개념으로 사용하고 있었습니다. 이걸 뜯어보면서 프로그래밍에 대한 이런저런 관심을 가지게 되었습니다.</p>
<p>프로그래밍 입문은 대학교 2학년 시절 학부 연구생을 시작하면서 본격적으로 입문했습니다. 해당 랩실에서 여러 프로젝트를 진행하면서 본격적으로 프로그래밍을 시작하게 되었습니다.</p>
<h4>Q. POCU 아카데미에 대해서는 어떻게 알게 되셨나요</h4>
<p>포프 TV를 통해서 알게 되었습니다. 그때 마침 노트북을 하나 장만하려고 여기저기 기웃거리다가, 포프님이 “북미 개발자의 개발용 노트북 추천” 영상을 보게 되었습니다. 해당 영상을 통해 자연스럽게 포프님의 여러 영상들도 둘러보게 되었고, 그렇게 POCU 아카데미에 스며들었습니다.</p>
<h4>Q. POCU 아카데미에서 어떤 과목(들)을 들으셨나요</h4>
<p>개체 지향 프로그래밍 및 설계(COMP 2500), 알고리듬 및 자료구조(COMP 3500) 과목을 수강했습니다. COMP 2500은 수료를 했는데.. 음.. 3500은 69점을 맞아서.. 수료는 못했습니..다.. ㅎㅎ.. 흑흑ㅠ 추가적으로는 각각 과목들에 대해 조교 업무까지 수행했었습니다.</p>
<h4>Q. 과목을 듣기 전에 기대했던 점이 있을까요? 실제로 그 강의가 기대에는 부합했나요</h4>
<p>개체 지향 프로그래밍 및 설계(COMP 2500) 과목에서는 개체 지향적으로 사고하는 방법의 습득과, 실습 과제를 통한 이의 체득을 배웠습니다. 알고리듬 및 자료구조(COMP 3500) 과목에서는 여러 기업 코딩 테스트를 통과하기 위한 자료구조, 알고리즘의 기초 지식의 학습과 이의 체득을 기대했습니다.</p>
<p>COMP 2500 과목은 풀코스를 잘 따라가서 기대했던 것 이상 얻어 갈 수 있었지만, COMP 3500은 풀코스 수강만으로는 기대하는 결과를 얻지 못한 것 같습니다. 전체 커리큘럼을 수강생이 아닌 조교 시점에서 다시 복습함으로써 기대했던 성과를 낼 수 있었습니다.</p>
<h4>Q. 아하.. 그렇다면 그 과목에 대해 아쉬웠거나 어려웠던 것이 있을까요? 공유해 주세요. 저희에게 피와 살이 됩니다</h4>
<p>음.. 과제와 실습이 아주 어려웠었습니다. 특히 과제는.. 거의 3주 내내 붙잡고 있어야 통과할 수 있었고, COMP 3500의 4번째 과제는 끝내 100점을 맞지 못한 아픈 기억이 남아 있습니다.</p>
<h4>Q. POCU 아카데미를 수강하고 난 뒤에 어떤 변화가 있었나요? 취업이나 승진 등의 성과적인 변화도 좋고, 마음가짐의 변화 이야기도 좋아요</h4>
<p>COMP 2500 강의를 수강한 후에, 기존의 프로그래밍 분야 전반의 지식들에 대해 이분법적으로 판단하던 나쁜 습관을 버릴 수 있었습니다. 그 덕분에 기술과 패러다임을 바라보는 시야를 넓힐 수 있었습니다. 단적인 예로 COMP 2500 마지막에 소개되는 소수설 중 일부는 대한민국에서는 하나의 법칙처럼 통용됩니다. 특정 패러다임에 대해 이미 긍정적인 기류가 형성된 업계에서 이에 상반되는 내용을 배우고, 기존에 가지고 있던 지식들에 대해 반추함으로써 앞으로 배우게 될 지식들에 대해서도 단편적으로 바라보지 않고 보다 다양한 시각에서 사고할 수 있게 되었습니다.</p>
<h4>Q. 미래의 POCU 아카데미 수강생에게 하시고 싶은 조언이 있다면 한 말씀 부탁드립니다</h4>
<p>POCU 아카데미에서는 최소 한 과목을 수료한 수강생들을 대상으로 매 학기 시작 전 조교들을 모집하고 있습니다. 과목 하나를 패스하시고 해당 공고에 지원해 보세요. 수강했던 과목에 대해 조교로써 한 학기를 다시 보내 보시는 걸 정말 추천드립니다. 수강생으로 참여했을 때 배우지 못한 것들을 배울 수 있습니다. 그리고 저는 개인적으로 조교 업무까지 수행하는 것이, 진정한 풀코스 완성이 아닐까 생각합니다 ㅎㅎ (한 과목 99% 할인은 덤..)</p>
<h4>Q. 요즘 관심 있게 보고 계시는 기술 분야가 있으시면 POCU 수강생들과 공유를 부탁드립니다</h4>
<p>Kafka 생태계에 관심이 많습니다. 이전 회사에서 Kafka 인프라의 구축, 운영 트러블 슈팅까지 손수 진행하면서 고생을 정말 정말 많이 했었는데요. 사용되는 용어와 개념이 많이 생소해 러닝 커브가 높지만, 기술 이면의 철학들에 대해 파고들다 보면 많은 생각도 하게 되고, 스스로 되게 배울 것도 많은 플랫폼이라 생각이 듭니다.</p>
<h4>Q. 추후 계획은 어떻게 되시나요? 개발자님이 앞으로 꾸시는 꿈과 계획을 알려주세요</h4>
<p>국내에서 많이 배우고 성장해 5년 안에 해외 빅 테크 기업에 입사하려 합니다. 이후에는 그동안 쌓아온 네트워크로 저만의 사업을 할 예정입니다.</p>
<h4>Q. 마지막으로 하시고 싶은 말씀을 자유롭게 해 주세요</h4>
<p>POCU 아카데미 덕분에 개발자에게 필요한 기초 소양들을 잘 쌓고 실무로 나아갈 수 있었습니다. 문제들의 정답이 아닌 정답을 찾는 방법을 알려주는 POCU 아카데미를 통해, 보다 많은 분들이 제대로 프로그래밍을 배워 실무에서 믿을 수 있는 동료로 뵐 수 있었으면 좋겠습니다.</p>]]></content><author><name>윤아</name></author><category term="news" /><category term="success-story" /><category term="interview" /><category term="news" /><summary type="html"><![CDATA[POCU 아카데미 수강생 여러분 반갑습니다! 윤아입니다! 이번 성공 스토리는 대학을 졸업하시자마자 대학생들이 선호하는 대표적인 유니콘 기업, 토스에 취업을 확정 지으신 YSK 님입니다. 저희 POCU 강의와 조교 활동까지 하시며 POCU 아카데미에 진심이신, 또 누구보다 프로그래밍에 진심이신 YSK님의 이야기를 들어보시죠!]]></summary></entry></feed>